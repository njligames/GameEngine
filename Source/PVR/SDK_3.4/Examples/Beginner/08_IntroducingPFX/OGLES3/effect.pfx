[HEADER]
	VERSION		01.00.00.00
	DESCRIPTION texture example
	COPYRIGHT	Img Tec
[/HEADER]

[TEXTURES] 
	FILE basetex 	Basetex.pvr		LINEAR-LINEAR-LINEAR REPEAT-REPEAT
	FILE reflection Reflection.pvr	LINEAR-LINEAR-LINEAR REPEAT-REPEAT
[/TEXTURES]

[VERTEXSHADER]
	NAME 		VertexShader

	// LOAD GLSL AS CODE
	[GLSL_CODE]
		#version 300 es
		layout (location = 0) in highp vec4	inVertex;
		layout (location = 1) in mediump vec3	inNormal;
		layout (location = 2) in mediump vec2	inTexCoord;

		uniform highp   mat4  WVPMatrix;
		uniform mediump mat3  WorldViewIT;
		uniform mediump vec3  LightDirection;
		uniform highp   mat4  CustomMatrix;

		out lowp    float  DiffuseIntensity;
		out mediump vec2   TexCoord;
		out mediump vec2   EnvMapCoord;

		void main()
		{
			gl_Position = WVPMatrix * CustomMatrix * inVertex;
			mediump vec3 transNormal = normalize(WorldViewIT * inNormal);
			DiffuseIntensity = 0.5 + dot(transNormal, normalize(LightDirection)) * 0.5;
			TexCoord = inTexCoord;
			EnvMapCoord = 0.5 + transNormal.xy * 0.5;
		}
	[/GLSL_CODE]
[/VERTEXSHADER]
    
[FRAGMENTSHADER] 
	NAME 		FragmentShader 

	// LOAD GLSL AS CODE
	[GLSL_CODE]
		#version 300 es
		uniform sampler2D  sBaseTex;
		uniform sampler2D  sEnvMap;
		
		in lowp    float  DiffuseIntensity;
		in mediump vec2   TexCoord;
		in mediump vec2   EnvMapCoord;

		layout (location = 0) out lowp vec4 oColour;

		void main()
		{
			lowp vec3 envColor = 0.5 * texture(sEnvMap, EnvMapCoord).rgb;
			oColour.rgb = texture(sBaseTex, TexCoord).rgb * (DiffuseIntensity + envColor);
			oColour.a = 1.0;
		}
	[/GLSL_CODE]
[/FRAGMENTSHADER]
 
[EFFECT] 
	NAME 	Effect
		
	// GLOBALS UNIFORMS
	UNIFORM WorldViewIT 		WORLDVIEWIT
	UNIFORM WVPMatrix 			WORLDVIEWPROJECTION
	UNIFORM	LightDirection		LIGHTDIREYE
	UNIFORM	sBaseTex			TEXTURE0
	UNIFORM	sEnvMap				TEXTURE1
	UNIFORM CustomMatrix		MYCUSTOMSCALE

	// ATTRIBUTES
	ATTRIBUTE 	inVertex	POSITION
	ATTRIBUTE	inNormal	NORMAL
	ATTRIBUTE	inTexCoord	UV

	VERTEXSHADER   VertexShader
	FRAGMENTSHADER FragmentShader
	TEXTURE 0 basetex
	TEXTURE 1 reflection
[/EFFECT]
