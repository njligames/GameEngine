// This file was created by Filewrap 1.2
// Little endian mode
// DO NOT EDIT

#include "../PVRTMemoryFileSystem.h"

// using 32 bit to guarantee alignment.
#ifndef A32BIT
 #define A32BIT static const unsigned int
#endif

// ******** Start: effect.pfx ********

// File data
static const char _effect_pfx[] = 
	"[HEADER]\r\n"
	"\tVERSION\t\t01.00.00.00\r\n"
	"\tDESCRIPTION OGLES3OcclusionQueries\r\n"
	"\tCOPYRIGHT\tImagination Technologies\r\n"
	"[/HEADER]\r\n"
	"\r\n"
	"[EFFECT] \r\n"
	"\tNAME \tRenderDiffuse\r\n"
	"\t\t\r\n"
	"\t// GLOBALS UNIFORMS\r\n"
	"\tUNIFORM uWorldViewProjMatrix\tWORLDVIEWPROJECTION\r\n"
	"\tUNIFORM uWorldViewMatrix\t\t\tWORLDVIEW\r\n"
	"\tUNIFORM uWorldViewIT\t\t \t\tWORLDVIEWIT\t\r\n"
	"\tUNIFORM uLightPosView\t\t\t\tLIGHTPOSEYE\r\n"
	"\tUNIFORM uColour\t\t\t\t\t\tMATERIALCOLORDIFFUSE\r\n"
	"\t\t\r\n"
	"\tUNIFORM sTexture\t\t\t\t\tTEXTURE0\r\n"
	"\t\r\n"
	"\t// ATTRIBUTES\r\n"
	"\tATTRIBUTE inVertex\t\tPOSITION\r\n"
	"\tATTRIBUTE\tinNormal\t\tNORMAL\r\n"
	"\tATTRIBUTE\tinTexCoord\tUV\t\t\r\n"
	"\t\r\n"
	"\t// SHADERS\r\n"
	"\tVERTEXSHADER   DiffuseVertexShader\r\n"
	"\tFRAGMENTSHADER DiffuseFragmentShader\r\n"
	"[/EFFECT]\r\n"
	"\r\n"
	"[VERTEXSHADER]\r\n"
	"\tNAME \t\tDiffuseVertexShader\r\n"
	"\r\n"
	"\t[GLSL_CODE]\r\n"
	"\t\t#version 300 es\r\n"
	"\r\n"
	"\t\t#define VERTEX_ARRAY    0\r\n"
	"\t\t#define NORMAL_ARRAY    1\r\n"
	"\t\t#define TEXCOORD_ARRAY  2\r\n"
	"\r\n"
	"\t\tlayout (location = VERTEX_ARRAY)   in highp   vec3 inVertex;\r\n"
	"\t\tlayout (location = NORMAL_ARRAY)   in highp   vec3 inNormal;\r\n"
	"\t\tlayout (location = TEXCOORD_ARRAY) in mediump vec2 inTexCoord;\r\n"
	"\r\n"
	"\t\tuniform highp mat4 uWorldViewProjMatrix;\r\n"
	"\t\tuniform highp mat4 uWorldViewMatrix;\r\n"
	"\t\tuniform highp mat3 uWorldViewIT;\r\n"
	"\t\tuniform highp vec3 uLightPosView;\r\n"
	"\r\n"
	"\t\tout mediump vec2  vTexCoord;\r\n"
	"\t\tout highp   float vDiffuse;\r\n"
	"\t\t\r\n"
	"\t\tvoid main() \r\n"
	"\t\t{ \r\n"
	"\t\t\tgl_Position = uWorldViewProjMatrix * vec4(inVertex, 1.0);\r\n"
	"\t\t\tvTexCoord = inTexCoord;\r\n"
	"\t\t\t\r\n"
	"\t\t\thighp vec3 posView = (uWorldViewMatrix * vec4(inVertex, 1.0)).xyz;\r\n"
	"\t\t\thighp vec3 lightDirView = normalize(uLightPosView - posView);\r\n"
	"\t\t\thighp vec3 normalView = uWorldViewIT * inNormal;\r\n"
	"\t\t\tvDiffuse = max(dot(lightDirView, normalView), 0.0);\r\n"
	"\t\t} \r\n"
	"\t[/GLSL_CODE]\r\n"
	"[/VERTEXSHADER]\r\n"
	"\r\n"
	"    \r\n"
	"[FRAGMENTSHADER] \r\n"
	"\tNAME \t\tDiffuseFragmentShader \r\n"
	"\r\n"
	"\t[GLSL_CODE]\r\n"
	"\t  #version 300 es\r\n"
	"\r\n"
	"\t  uniform  sampler2D  sTexture;\r\n"
	"\t  uniform  lowp vec4  uColour;\r\n"
	"\r\n"
	"\t  in mediump vec2  vTexCoord;\r\n"
	"\t  in highp   float vDiffuse;\r\n"
	"\r\n"
	"\t  layout(location = 0) out lowp vec4 oColour;\r\n"
	"\r\n"
	"\t  void main()\r\n"
	"\t  {\r\n"
	"\t\t\toColour = texture(sTexture, vTexCoord) * uColour * vDiffuse;\r\n"
	"\t  }\r\n"
	"\t[/GLSL_CODE]\r\n"
	"[/FRAGMENTSHADER]\r\n"
	"\r\n"
	"\r\n"
	"//\r\n"
	"// Renders a single constant material colour\r\n"
	"//\r\n"
	"\r\n"
	"[EFFECT] \r\n"
	"\tNAME \tRenderMaterialColour\r\n"
	"\t\t\r\n"
	"\t// GLOBALS UNIFORMS\r\n"
	"\tUNIFORM uWorldViewProjMatrix\tWORLDVIEWPROJECTION\r\n"
	"\tUNIFORM uMaterialColour\t\t\tMATERIALCOLORDIFFUSE\r\n"
	"\t\r\n"
	"\t// ATTRIBUTES\r\n"
	"\tATTRIBUTE inVertex\t\tPOSITION\r\n"
	"\r\n"
	"\t// SHADERS\t\r\n"
	"\tVERTEXSHADER   MaterialColourVertexShader\r\n"
	"\tFRAGMENTSHADER MaterialColourFragmentShader\r\n"
	"[/EFFECT]\r\n"
	"\r\n"
	"[VERTEXSHADER]\r\n"
	"\tNAME \t\tMaterialColourVertexShader\r\n"
	"\r\n"
	"\t[GLSL_CODE]\r\n"
	"\t\t#version 300 es\r\n"
	"\r\n"
	"\t\t#define VERTEX_ARRAY    0\r\n"
	"\t\t#define NORMAL_ARRAY    1\r\n"
	"\t\t#define TEXCOORD_ARRAY  2\r\n"
	"\r\n"
	"\t\tlayout (location = VERTEX_ARRAY)   in highp   vec3 inVertex;\r\n"
	"\r\n"
	"\t\tuniform highp mat4 uWorldViewProjMatrix;\r\n"
	"\r\n"
	"\t\tvoid main() \r\n"
	"\t\t{ \r\n"
	"\t\t\tgl_Position = uWorldViewProjMatrix * vec4(inVertex, 1.0);\r\n"
	"\t\t} \r\n"
	"\t[/GLSL_CODE]\r\n"
	"[/VERTEXSHADER]\r\n"
	"\r\n"
	"[FRAGMENTSHADER] \r\n"
	"\tNAME \t\tMaterialColourFragmentShader \r\n"
	"\r\n"
	"\t[GLSL_CODE]\r\n"
	"\t\t#version 300 es\r\n"
	"\r\n"
	"\t\tuniform  lowp vec4 uMaterialColour;\r\n"
	"\r\n"
	"\t\tlayout(location = 0) out lowp vec4 oColour;\r\n"
	"\r\n"
	"\t\tvoid main()\r\n"
	"\t\t{\r\n"
	"\t\t\toColour = uMaterialColour;\r\n"
	"\t\t}\r\n"
	"\t[/GLSL_CODE]\r\n"
	"[/FRAGMENTSHADER]\r\n";

// Register effect.pfx in memory file system at application startup time
static CPVRTMemoryFileSystem RegisterFile_effect_pfx("effect.pfx", _effect_pfx, 3126);

// ******** End: effect.pfx ********

