[HEADER]
	VERSION		01.00.00.00
	DESCRIPTION OGLES2OcclusionQueries
	COPYRIGHT	Imagination Technologies
[/HEADER]

[EFFECT] 
	NAME 	RenderDiffuse
		
	// GLOBALS UNIFORMS
	UNIFORM uWorldViewProjMatrix	WORLDVIEWPROJECTION
	UNIFORM uWorldViewMatrix			WORLDVIEW
	UNIFORM uWorldViewIT		 		WORLDVIEWIT	
	UNIFORM uLightPosView				LIGHTPOSEYE
	UNIFORM uColour						MATERIALCOLORDIFFUSE
		
	UNIFORM sTexture					TEXTURE0
	
	// ATTRIBUTES
	ATTRIBUTE inVertex		POSITION
	ATTRIBUTE	inNormal		NORMAL
	ATTRIBUTE	inTexCoord	UV		
	
	// SHADERS
	VERTEXSHADER   DiffuseVertexShader
	FRAGMENTSHADER DiffuseFragmentShader
[/EFFECT]

[VERTEXSHADER]
	NAME 		DiffuseVertexShader

	[GLSL_CODE]
		attribute highp   vec3 inVertex;
		attribute highp   vec3 inNormal;
		attribute mediump vec2 inTexCoord;

		uniform highp mat4 uWorldViewProjMatrix;
		uniform highp mat4 uWorldViewMatrix;
		uniform highp mat3 uWorldViewIT;
		uniform highp vec3 uLightPosView;

		varying mediump vec2  vTexCoord;
		varying highp   float vDiffuse;
		
		void main() 
		{ 
			gl_Position = uWorldViewProjMatrix * vec4(inVertex, 1.0);
			vTexCoord = inTexCoord;
			
			highp vec3 posView = (uWorldViewMatrix * vec4(inVertex, 1.0)).xyz;
			highp vec3 lightDirView = normalize(uLightPosView - posView);
			highp vec3 normalView = uWorldViewIT * inNormal;
			vDiffuse = max(dot(lightDirView, normalView), 0.0);
		} 
	[/GLSL_CODE]
[/VERTEXSHADER]

    
[FRAGMENTSHADER] 
	NAME 		DiffuseFragmentShader 

	[GLSL_CODE]
	  uniform  sampler2D  sTexture;
	  uniform  lowp vec4  uColour;

	  varying mediump vec2  vTexCoord;
	  varying highp   float vDiffuse;

	  void main()
	  {
			gl_FragColor = texture2D(sTexture, vTexCoord) * uColour * vDiffuse;
	  }
	[/GLSL_CODE]
[/FRAGMENTSHADER]


//
// Renders a single constant material colour
//

[EFFECT] 
	NAME 	RenderMaterialColour
		
	// GLOBALS UNIFORMS
	UNIFORM uWorldViewProjMatrix	WORLDVIEWPROJECTION
	UNIFORM uMaterialColour			MATERIALCOLORDIFFUSE
	
	// ATTRIBUTES
	ATTRIBUTE inVertex		POSITION

	// SHADERS	
	VERTEXSHADER   MaterialColourVertexShader
	FRAGMENTSHADER MaterialColourFragmentShader
[/EFFECT]

[VERTEXSHADER]
	NAME 		MaterialColourVertexShader

	[GLSL_CODE]
		attribute highp   vec3 inVertex;

		uniform highp mat4 uWorldViewProjMatrix;

		void main() 
		{ 
			gl_Position = uWorldViewProjMatrix * vec4(inVertex, 1.0);
		} 
	[/GLSL_CODE]
[/VERTEXSHADER]

[FRAGMENTSHADER] 
	NAME 		MaterialColourFragmentShader 

	[GLSL_CODE]
		uniform  lowp vec4 uMaterialColour;

		void main()
		{
			gl_FragColor = uMaterialColour;
		}
	[/GLSL_CODE]
[/FRAGMENTSHADER]
