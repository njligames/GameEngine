[HEADER]
	VERSION		01.00.00.00
	DESCRIPTION OGLES3TextureArray
	COPYRIGHT	Imagination Technologies
[/HEADER]

[TEXTURE]
	NAME			textureArray
	PATH			textureArray.pvr
	MINIFICATION		LINEAR
	MAGNIFICATION	LINEAR
	MIPMAP				NEAREST
	WRAP_S				REPEAT
	WRAP_T				REPEAT
[/TEXTURE]

//
// Effect to render the scene using a cube shadow map
//

[EFFECT] 
	NAME 	RenderTextureArray
		
	// GLOBALS UNIFORMS		
	UNIFORM sTextureArray		TEXTURE0
	
	// ATTRIBUTES
	ATTRIBUTE inVertex			POSITION
	ATTRIBUTE	inTexCoord		UV
	ATTRIBUTE	inTexIndex		CUSTOMSEMANTIC_TEXINDEX
		
	// SHADERS
	VERTEXSHADER   VertexShader
	FRAGMENTSHADER FragmentShader
[/EFFECT]

[VERTEXSHADER]
	NAME 		VertexShader

	[GLSL_CODE]
		#version 300 es

		#define VERTEX_ARRAY    0
		#define TEXCOORD_ARRAY  1
		#define TEXINDEX_ARRAY  2

		layout (location = VERTEX_ARRAY)   in highp   vec2  inVertex;
		layout (location = TEXCOORD_ARRAY) in mediump vec2  inTexCoord;
		layout (location = TEXINDEX_ARRAY) in mediump float inTexIndex;

		out mediump vec3 vTexCoord;

		void main() 
		{ 		
			gl_Position = vec4(inVertex, 0.0, 1.0);			
			vTexCoord.st = inTexCoord;	
			vTexCoord.p = inTexIndex;
		} 
	[/GLSL_CODE]
[/VERTEXSHADER]

    
[FRAGMENTSHADER] 
	NAME 		FragmentShader 

	[GLSL_CODE]
	  #version 300 es

	  uniform mediump sampler2DArray sTextureArray;

	  in mediump vec3 vTexCoord;

	  layout(location = 0) out lowp vec4 oColour;

	  void main()
	  {
	      oColour = texture(sTextureArray, vTexCoord);	
	  }	
	[/GLSL_CODE]
[/FRAGMENTSHADER]
