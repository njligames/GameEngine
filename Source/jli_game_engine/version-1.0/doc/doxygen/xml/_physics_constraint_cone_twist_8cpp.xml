<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_physics_constraint_cone_twist_8cpp" kind="file">
    <compoundname>PhysicsConstraintConeTwist.cpp</compoundname>
    <includes refid="_physics_constraint_cone_twist_8h" local="yes">PhysicsConstraintConeTwist.h</includes>
    <includes refid="_j_l_i_factory_types_8h" local="yes">JLIFactoryTypes.h</includes>
    <includes refid="_world_8h" local="yes">World.h</includes>
    <includes refid="_physics_constraint_cone_twist_builder_8h" local="yes">PhysicsConstraintConeTwistBuilder.h</includes>
    <includes local="yes">btConeTwistConstraint.h</includes>
    <includes refid="_physics_world_8h" local="yes">PhysicsWorld.h</includes>
    <includes refid="_physics_body_8h" local="yes">PhysicsBody.h</includes>
    <includes local="yes">btPrint.h</includes>
    <incdepgraph>
      <node id="26865">
        <label>btIDebugDraw.h</label>
      </node>
      <node id="26829">
        <label>lua.hpp</label>
      </node>
      <node id="26815">
        <label>PhysicsConstraintConeTwist.h</label>
        <link refid="_physics_constraint_cone_twist_8h"/>
        <childnode refid="26816" relation="include">
        </childnode>
        <childnode refid="26828" relation="include">
        </childnode>
        <childnode refid="26829" relation="include">
        </childnode>
        <childnode refid="26820" relation="include">
        </childnode>
        <childnode refid="26830" relation="include">
        </childnode>
      </node>
      <node id="26840">
        <label>WorldLuaVirtualMachine.h</label>
        <link refid="_world_lua_virtual_machine_8h"/>
        <childnode refid="26824" relation="include">
        </childnode>
        <childnode refid="26819" relation="include">
        </childnode>
        <childnode refid="26829" relation="include">
        </childnode>
        <childnode refid="26841" relation="include">
        </childnode>
        <childnode refid="26843" relation="include">
        </childnode>
        <childnode refid="26846" relation="include">
        </childnode>
        <childnode refid="26848" relation="include">
        </childnode>
        <childnode refid="26849" relation="include">
        </childnode>
        <childnode refid="26850" relation="include">
        </childnode>
        <childnode refid="26851" relation="include">
        </childnode>
        <childnode refid="26852" relation="include">
        </childnode>
        <childnode refid="26817" relation="include">
        </childnode>
      </node>
      <node id="26857">
        <label>Camera.h</label>
        <link refid="_camera_8h"/>
        <childnode refid="26828" relation="include">
        </childnode>
        <childnode refid="26816" relation="include">
        </childnode>
        <childnode refid="26832" relation="include">
        </childnode>
        <childnode refid="26858" relation="include">
        </childnode>
        <childnode refid="26829" relation="include">
        </childnode>
      </node>
      <node id="26820">
        <label>Log.h</label>
        <link refid="_log_8h"/>
        <childnode refid="26821" relation="include">
        </childnode>
      </node>
      <node id="26873">
        <label>netinet/in.h</label>
      </node>
      <node id="26825">
        <label>AbstractDecorator.h</label>
        <link refid="_abstract_decorator_8h"/>
        <childnode refid="26819" relation="include">
        </childnode>
        <childnode refid="26826" relation="include">
        </childnode>
        <childnode refid="26824" relation="include">
        </childnode>
      </node>
      <node id="26839">
        <label>queue</label>
      </node>
      <node id="26880">
        <label>PhysicsWorld.h</label>
        <link refid="_physics_world_8h"/>
        <childnode refid="26828" relation="include">
        </childnode>
        <childnode refid="26816" relation="include">
        </childnode>
        <childnode refid="26819" relation="include">
        </childnode>
        <childnode refid="26817" relation="include">
        </childnode>
        <childnode refid="26881" relation="include">
        </childnode>
        <childnode refid="26829" relation="include">
        </childnode>
        <childnode refid="26882" relation="include">
        </childnode>
        <childnode refid="26832" relation="include">
        </childnode>
      </node>
      <node id="26859">
        <label>WorldClock.h</label>
        <link refid="_world_clock_8h"/>
        <childnode refid="26860" relation="include">
        </childnode>
        <childnode refid="26818" relation="include">
        </childnode>
        <childnode refid="26861" relation="include">
        </childnode>
        <childnode refid="26824" relation="include">
        </childnode>
      </node>
      <node id="26845">
        <label>btVector2.h</label>
      </node>
      <node id="26883">
        <label>PhysicsBody.h</label>
        <link refid="_physics_body_8h"/>
        <childnode refid="26828" relation="include">
        </childnode>
        <childnode refid="26816" relation="include">
        </childnode>
        <childnode refid="26832" relation="include">
        </childnode>
        <childnode refid="26884" relation="include">
        </childnode>
        <childnode refid="26829" relation="include">
        </childnode>
      </node>
      <node id="26819">
        <label>Util.h</label>
        <link refid="_util_8h"/>
        <childnode refid="26820" relation="include">
        </childnode>
        <childnode refid="26822" relation="include">
        </childnode>
        <childnode refid="26823" relation="include">
        </childnode>
      </node>
      <node id="26853">
        <label>WorldSQLite.h</label>
        <link refid="_world_s_q_lite_8h"/>
        <childnode refid="26819" relation="include">
        </childnode>
        <childnode refid="26854" relation="include">
        </childnode>
        <childnode refid="26824" relation="include">
        </childnode>
      </node>
      <node id="26841">
        <label>AbstractState.h</label>
        <link refid="_abstract_state_8h"/>
        <childnode refid="26828" relation="include">
        </childnode>
        <childnode refid="26819" relation="include">
        </childnode>
        <childnode refid="26842" relation="include">
        </childnode>
        <childnode refid="26822" relation="include">
        </childnode>
      </node>
      <node id="26822">
        <label>stdlib.h</label>
      </node>
      <node id="26882">
        <label>btDynamicsWorld.h</label>
      </node>
      <node id="26844">
        <label>DeviceInputTime.h</label>
        <link refid="_device_input_time_8h"/>
        <childnode refid="26819" relation="include">
        </childnode>
      </node>
      <node id="26877">
        <label>btQuickprof.h</label>
      </node>
      <node id="26867">
        <label>File.h</label>
        <link refid="_file_8h"/>
        <childnode refid="26821" relation="include">
        </childnode>
        <childnode refid="26823" relation="include">
        </childnode>
        <childnode refid="26822" relation="include">
        </childnode>
      </node>
      <node id="26866">
        <label>WorldHUD.h</label>
        <link refid="_world_h_u_d_8h"/>
        <childnode refid="26818" relation="include">
        </childnode>
        <childnode refid="26867" relation="include">
        </childnode>
        <childnode refid="26819" relation="include">
        </childnode>
        <childnode refid="26868" relation="include">
        </childnode>
        <childnode refid="26869" relation="include">
        </childnode>
        <childnode refid="26832" relation="include">
        </childnode>
        <childnode refid="26817" relation="include">
        </childnode>
        <childnode refid="26826" relation="include">
        </childnode>
      </node>
      <node id="26863">
        <label>Geometry.h</label>
        <link refid="_geometry_8h"/>
        <childnode refid="26828" relation="include">
        </childnode>
        <childnode refid="26816" relation="include">
        </childnode>
        <childnode refid="26829" relation="include">
        </childnode>
        <childnode refid="26864" relation="include">
        </childnode>
        <childnode refid="26824" relation="include">
        </childnode>
        <childnode refid="26845" relation="include">
        </childnode>
        <childnode refid="26858" relation="include">
        </childnode>
      </node>
      <node id="26860">
        <label>AbstractClock.h</label>
        <link refid="_abstract_clock_8h"/>
        <childnode refid="26819" relation="include">
        </childnode>
        <childnode refid="26824" relation="include">
        </childnode>
      </node>
      <node id="26824">
        <label>string</label>
      </node>
      <node id="26848">
        <label>Scene.h</label>
        <link refid="_scene_8h"/>
        <childnode refid="26828" relation="include">
        </childnode>
        <childnode refid="26816" relation="include">
        </childnode>
        <childnode refid="26817" relation="include">
        </childnode>
        <childnode refid="26832" relation="include">
        </childnode>
        <childnode refid="26829" relation="include">
        </childnode>
        <childnode refid="26824" relation="include">
        </childnode>
        <childnode refid="26826" relation="include">
        </childnode>
      </node>
      <node id="26843">
        <label>DeviceTouch.h</label>
        <link refid="_device_touch_8h"/>
        <childnode refid="26844" relation="include">
        </childnode>
        <childnode refid="26845" relation="include">
        </childnode>
        <childnode refid="26824" relation="include">
        </childnode>
      </node>
      <node id="26879">
        <label>btConeTwistConstraint.h</label>
      </node>
      <node id="26838">
        <label>map</label>
      </node>
      <node id="26846">
        <label>Node.h</label>
        <link refid="_node_8h"/>
        <childnode refid="26828" relation="include">
        </childnode>
        <childnode refid="26816" relation="include">
        </childnode>
        <childnode refid="26847" relation="include">
        </childnode>
        <childnode refid="26832" relation="include">
        </childnode>
        <childnode refid="26845" relation="include">
        </childnode>
        <childnode refid="26829" relation="include">
        </childnode>
        <childnode refid="26824" relation="include">
        </childnode>
      </node>
      <node id="26874">
        <label>WorldState.h</label>
        <link refid="_world_state_8h"/>
        <childnode refid="26828" relation="include">
        </childnode>
        <childnode refid="26841" relation="include">
        </childnode>
        <childnode refid="26843" relation="include">
        </childnode>
        <childnode refid="26829" relation="include">
        </childnode>
      </node>
      <node id="26858">
        <label>btVector3.h</label>
      </node>
      <node id="26817">
        <label>btAlignedObjectArray.h</label>
      </node>
      <node id="26852">
        <label>PhysicsRayContact.h</label>
        <link refid="_physics_ray_contact_8h"/>
        <childnode refid="26828" relation="include">
        </childnode>
        <childnode refid="26816" relation="include">
        </childnode>
        <childnode refid="26829" relation="include">
        </childnode>
      </node>
      <node id="26854">
        <label>sqlite3.h</label>
      </node>
      <node id="26828">
        <label>AbstractBuilder.h</label>
        <link refid="_abstract_builder_8h"/>
        <childnode refid="26816" relation="include">
        </childnode>
        <childnode refid="26819" relation="include">
        </childnode>
        <childnode refid="26827" relation="include">
        </childnode>
        <childnode refid="26824" relation="include">
        </childnode>
      </node>
      <node id="26885">
        <label>btPrint.h</label>
      </node>
      <node id="26827">
        <label>btSerializer.h</label>
      </node>
      <node id="26833">
        <label>btBroadphaseProxy.h</label>
      </node>
      <node id="26862">
        <label>WorldDebugDrawer.h</label>
        <link refid="_world_debug_drawer_8h"/>
        <childnode refid="26824" relation="include">
        </childnode>
        <childnode refid="26863" relation="include">
        </childnode>
        <childnode refid="26865" relation="include">
        </childnode>
      </node>
      <node id="26861">
        <label>btClock.h</label>
      </node>
      <node id="26872">
        <label>WorldSocket.h</label>
        <link refid="_world_socket_8h"/>
        <childnode refid="26873" relation="include">
        </childnode>
        <childnode refid="26818" relation="include">
        </childnode>
        <childnode refid="26839" relation="include">
        </childnode>
        <childnode refid="26824" relation="include">
        </childnode>
        <childnode refid="26867" relation="include">
        </childnode>
      </node>
      <node id="26856">
        <label>GLPlatform.h</label>
      </node>
      <node id="26836">
        <label>WorldFactory.h</label>
        <link refid="_world_factory_8h"/>
        <childnode refid="26819" relation="include">
        </childnode>
        <childnode refid="26817" relation="include">
        </childnode>
        <childnode refid="26837" relation="include">
        </childnode>
        <childnode refid="26827" relation="include">
        </childnode>
        <childnode refid="26828" relation="include">
        </childnode>
        <childnode refid="26816" relation="include">
        </childnode>
        <childnode refid="26838" relation="include">
        </childnode>
        <childnode refid="26839" relation="include">
        </childnode>
        <childnode refid="26824" relation="include">
        </childnode>
        <childnode refid="26826" relation="include">
        </childnode>
        <childnode refid="26832" relation="include">
        </childnode>
      </node>
      <node id="26850">
        <label>btManifoldPoint.h</label>
      </node>
      <node id="26842">
        <label>btScalar.h</label>
      </node>
      <node id="26864">
        <label>bitset</label>
      </node>
      <node id="26847">
        <label>AbstractActionable.h</label>
        <link refid="_abstract_actionable_8h"/>
        <childnode refid="26819" relation="include">
        </childnode>
        <childnode refid="26824" relation="include">
        </childnode>
        <childnode refid="26839" relation="include">
        </childnode>
        <childnode refid="26826" relation="include">
        </childnode>
      </node>
      <node id="26837">
        <label>btHashMap.h</label>
      </node>
      <node id="26826">
        <label>vector</label>
      </node>
      <node id="26870">
        <label>WorldInput.h</label>
        <link refid="_world_input_8h"/>
        <childnode refid="26818" relation="include">
        </childnode>
        <childnode refid="26824" relation="include">
        </childnode>
      </node>
      <node id="26849">
        <label>btDispatcher.h</label>
      </node>
      <node id="26818">
        <label>AbstractObject.h</label>
        <link refid="_abstract_object_8h"/>
        <childnode refid="26819" relation="include">
        </childnode>
        <childnode refid="26824" relation="include">
        </childnode>
        <childnode refid="26825" relation="include">
        </childnode>
      </node>
      <node id="26881">
        <label>btOverlappingPairCache.h</label>
      </node>
      <node id="26832">
        <label>JLIFactoryTypes.h</label>
        <link refid="_j_l_i_factory_types_8h"/>
        <childnode refid="26819" relation="include">
        </childnode>
        <childnode refid="26833" relation="include">
        </childnode>
      </node>
      <node id="26878">
        <label>PhysicsConstraintConeTwistBuilder.h</label>
        <link refid="_physics_constraint_cone_twist_builder_8h"/>
        <childnode refid="26817" relation="include">
        </childnode>
        <childnode refid="26819" relation="include">
        </childnode>
        <childnode refid="26828" relation="include">
        </childnode>
        <childnode refid="26827" relation="include">
        </childnode>
        <childnode refid="26829" relation="include">
        </childnode>
        <childnode refid="26820" relation="include">
        </childnode>
      </node>
      <node id="26869">
        <label>AbstractFrameBufferObject.h</label>
        <link refid="_abstract_frame_buffer_object_8h"/>
        <childnode refid="26819" relation="include">
        </childnode>
      </node>
      <node id="26875">
        <label>WorldStateMachine.h</label>
        <link refid="_world_state_machine_8h"/>
        <childnode refid="26828" relation="include">
        </childnode>
        <childnode refid="26876" relation="include">
        </childnode>
        <childnode refid="26829" relation="include">
        </childnode>
      </node>
      <node id="26835">
        <label>cstddef</label>
      </node>
      <node id="26834">
        <label>World.h</label>
        <link refid="_world_8h"/>
        <childnode refid="26819" relation="include">
        </childnode>
        <childnode refid="26835" relation="include">
        </childnode>
        <childnode refid="26836" relation="include">
        </childnode>
        <childnode refid="26840" relation="include">
        </childnode>
        <childnode refid="26853" relation="include">
        </childnode>
        <childnode refid="26855" relation="include">
        </childnode>
        <childnode refid="26857" relation="include">
        </childnode>
        <childnode refid="26859" relation="include">
        </childnode>
        <childnode refid="26862" relation="include">
        </childnode>
        <childnode refid="26866" relation="include">
        </childnode>
        <childnode refid="26870" relation="include">
        </childnode>
        <childnode refid="26871" relation="include">
        </childnode>
        <childnode refid="26872" relation="include">
        </childnode>
        <childnode refid="26874" relation="include">
        </childnode>
        <childnode refid="26875" relation="include">
        </childnode>
        <childnode refid="26824" relation="include">
        </childnode>
      </node>
      <node id="26855">
        <label>WorldSound.h</label>
        <link refid="_world_sound_8h"/>
        <childnode refid="26856" relation="include">
        </childnode>
        <childnode refid="26818" relation="include">
        </childnode>
        <childnode refid="26819" relation="include">
        </childnode>
        <childnode refid="26824" relation="include">
        </childnode>
      </node>
      <node id="26884">
        <label>btTransform.h</label>
      </node>
      <node id="26814">
        <label>/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/PhysicsConstraintConeTwist.cpp</label>
        <link refid="PhysicsConstraintConeTwist.cpp"/>
        <childnode refid="26815" relation="include">
        </childnode>
        <childnode refid="26832" relation="include">
        </childnode>
        <childnode refid="26834" relation="include">
        </childnode>
        <childnode refid="26878" relation="include">
        </childnode>
        <childnode refid="26879" relation="include">
        </childnode>
        <childnode refid="26880" relation="include">
        </childnode>
        <childnode refid="26883" relation="include">
        </childnode>
        <childnode refid="26885" relation="include">
        </childnode>
      </node>
      <node id="26821">
        <label>Macros.h</label>
        <link refid="_macros_8h"/>
      </node>
      <node id="26830">
        <label>PhysicsConstraint.h</label>
        <link refid="_physics_constraint_8h"/>
        <childnode refid="26828" relation="include">
        </childnode>
        <childnode refid="26816" relation="include">
        </childnode>
        <childnode refid="26820" relation="include">
        </childnode>
        <childnode refid="26829" relation="include">
        </childnode>
        <childnode refid="26831" relation="include">
        </childnode>
      </node>
      <node id="26868">
        <label>nanovg.h</label>
      </node>
      <node id="26851">
        <label>Action.h</label>
        <link refid="_action_8h"/>
        <childnode refid="26847" relation="include">
        </childnode>
        <childnode refid="26828" relation="include">
        </childnode>
        <childnode refid="26816" relation="include">
        </childnode>
        <childnode refid="26832" relation="include">
        </childnode>
        <childnode refid="26817" relation="include">
        </childnode>
        <childnode refid="26829" relation="include">
        </childnode>
        <childnode refid="26839" relation="include">
        </childnode>
        <childnode refid="26826" relation="include">
        </childnode>
      </node>
      <node id="26871">
        <label>WorldResourceLoader.h</label>
        <link refid="_world_resource_loader_8h"/>
        <childnode refid="26818" relation="include">
        </childnode>
        <childnode refid="26832" relation="include">
        </childnode>
        <childnode refid="26837" relation="include">
        </childnode>
        <childnode refid="26826" relation="include">
        </childnode>
      </node>
      <node id="26823">
        <label>stdio.h</label>
      </node>
      <node id="26816">
        <label>AbstractFactoryObject.h</label>
        <link refid="_abstract_factory_object_8h"/>
        <childnode refid="26817" relation="include">
        </childnode>
        <childnode refid="26818" relation="include">
        </childnode>
        <childnode refid="26819" relation="include">
        </childnode>
        <childnode refid="26827" relation="include">
        </childnode>
      </node>
      <node id="26876">
        <label>AbstractStateMachine.h</label>
        <link refid="_abstract_state_machine_8h"/>
        <childnode refid="26816" relation="include">
        </childnode>
        <childnode refid="26841" relation="include">
        </childnode>
        <childnode refid="26877" relation="include">
        </childnode>
        <childnode refid="26839" relation="include">
        </childnode>
      </node>
      <node id="26831">
        <label>btTypedConstraint.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacenjli">njli</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="_physics_constraint_cone_twist_8cpp_1afc3d101f633a076cc1ca84b85b6224b2" prot="public" static="no">
        <name>TAG</name>
        <initializer>&quot;PhysicsConstraintConeTwist.cpp&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/PhysicsConstraintConeTwist.cpp" line="15" column="13" bodyfile="/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/PhysicsConstraintConeTwist.cpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_physics_constraint_cone_twist_8cpp_1a4d0768c0d97829b5c252f9643bdc19f5" prot="public" static="no">
        <name>FORMATSTRING</name>
        <initializer>&quot;{\&quot;PhysicsConstraint\&quot;:[]}&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/PhysicsConstraintConeTwist.cpp" line="21" column="9" bodyfile="/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/PhysicsConstraintConeTwist.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>PhysicsConstraintConeTwist.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>JLIGameEngineTest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Created<sp/>by<sp/>James<sp/>Folk<sp/>on<sp/>6/19/15.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2015<sp/>James<sp/>Folk.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>Implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_physics_constraint_cone_twist_8h" kindref="compound">PhysicsConstraintConeTwist.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_j_l_i_factory_types_8h" kindref="compound">JLIFactoryTypes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_world_8h" kindref="compound">World.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_physics_constraint_cone_twist_builder_8h" kindref="compound">PhysicsConstraintConeTwistBuilder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TAG<sp/>&quot;PhysicsConstraintConeTwist.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;btConeTwistConstraint.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_physics_world_8h" kindref="compound">PhysicsWorld.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_physics_body_8h" kindref="compound">PhysicsBody.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FORMATSTRING<sp/>&quot;{\&quot;PhysicsConstraint\&quot;:[]}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;btPrint.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenjli" kindref="compound">njli</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a947d157eba75740eb5ef4cd2a2d84fa7" kindref="member">PhysicsConstraintConeTwist::PhysicsConstraintConeTwist</ref>():</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>PhysicsConstraint(),</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>m_btConeTwistConstraint(<ref refid="_abstract_state_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a947d157eba75740eb5ef4cd2a2d84fa7" kindref="member">PhysicsConstraintConeTwist::PhysicsConstraintConeTwist</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AbstractBuilder<sp/>&amp;builder):</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>PhysicsConstraint(builder),</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>m_btConeTwistConstraint(<ref refid="_abstract_state_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a947d157eba75740eb5ef4cd2a2d84fa7" kindref="member">PhysicsConstraintConeTwist::PhysicsConstraintConeTwist</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PhysicsConstraintConeTwist<sp/>&amp;copy):</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>PhysicsConstraint(copy),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>m_btConeTwistConstraint(<ref refid="_abstract_state_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1adb60c008973ada2d2732a14b5151180a" kindref="member">PhysicsConstraintConeTwist::~PhysicsConstraintConeTwist</ref>()</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a7af1e9aaa2f6aadb05b4a378c316f0c2" kindref="member">removeConstraint</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>PhysicsConstraintConeTwist<sp/>&amp;<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a10c64d1e4905f1e0d93719156a099c9e" kindref="member">PhysicsConstraintConeTwist::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PhysicsConstraintConeTwist<sp/>&amp;rhs)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;rhs)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_util_8h_1aa62c75d314a0d1f37f79c4b73b2292e2" kindref="member">s32</ref><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a0d7823f6a24df0245a7374b1397cfdce" kindref="member">PhysicsConstraintConeTwist::calculateSerializeBufferSize</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="62"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>calculateSerializeBufferSize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a481d849af80292c04c6d08f35ab6a5b6" kindref="member">PhysicsConstraintConeTwist::serialize</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>dataBuffer,<sp/>btSerializer*<sp/>serializer)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="68"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>serialize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a5e3fbdab01224dcc5704d073a585a19e" kindref="member">PhysicsConstraintConeTwist::getClassName</ref>()</highlight><highlight class="keyword">const</highlight></codeline>
<codeline lineno="73"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;PhysicsConstraintConeTwist&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_util_8h_1aa62c75d314a0d1f37f79c4b73b2292e2" kindref="member">s32</ref><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a71bc12b928b4dcf8fb545f3f0c7f0592" kindref="member">PhysicsConstraintConeTwist::getType</ref>()</highlight><highlight class="keyword">const</highlight></codeline>
<codeline lineno="78"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1ae4a36ebf24e097f5a93d80b5ccf1fd0e" kindref="member">PhysicsConstraintConeTwist::type</ref>();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>PhysicsConstraintConeTwist::operator<sp/>std::string()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="83"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_json_j_l_i_1aac51324ec88a76dee9559a4282e01c9a" kindref="member">njli::JsonJLI::parse</ref>(string_format(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="_physics_constraint_cone_twist_8cpp_1a4d0768c0d97829b5c252f9643bdc19f5" kindref="member">FORMATSTRING</ref>).c_str());</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>PhysicsConstraintConeTwist<sp/>**<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a401a75f359b2221446f5f3220d42a6f5" kindref="member">PhysicsConstraintConeTwist::createArray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_util_8h_1a10e94b422ef0c20dcdec20d31a1f5049" kindref="member">u32</ref><sp/>size)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a947d157eba75740eb5ef4cd2a2d84fa7" kindref="member">PhysicsConstraintConeTwist</ref>**)<ref refid="classnjli_1_1_world_1a916b92be91d763c4dda322458eca74be" kindref="member">World::getInstance</ref>()-&gt;<ref refid="classnjli_1_1_world_1a02d2a4cda6b5a38bc1db523aba97c52c" kindref="member">getWorldFactory</ref>()-&gt;<ref refid="classnjli_1_1_world_factory_1a6c379949bd79510d934515f9a0aa4008" kindref="member">createArray</ref>(<ref refid="classnjli_1_1_physics_constraint_cone_twist_1ae4a36ebf24e097f5a93d80b5ccf1fd0e" kindref="member">PhysicsConstraintConeTwist::type</ref>(),<sp/>size);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1aa248cf2302349c7a54bd75e4c103528d" kindref="member">PhysicsConstraintConeTwist::destroyArray</ref>(PhysicsConstraintConeTwist<sp/>**array,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_util_8h_1a10e94b422ef0c20dcdec20d31a1f5049" kindref="member">u32</ref><sp/>size)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_world_1a916b92be91d763c4dda322458eca74be" kindref="member">World::getInstance</ref>()-&gt;<ref refid="classnjli_1_1_world_1a02d2a4cda6b5a38bc1db523aba97c52c" kindref="member">getWorldFactory</ref>()-&gt;<ref refid="classnjli_1_1_world_factory_1a40a00fcf24618fa8e4c037efe19119d9" kindref="member">destroyArray</ref>((<ref refid="classnjli_1_1_abstract_factory_object_1a4f7ae7bf09c7c9426e7d6023f7fd8dec" kindref="member">AbstractFactoryObject</ref>**)array,<sp/>size);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>PhysicsConstraintConeTwist<sp/>*<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a21d0e8f2ac429579de20dbe3d12d7fff" kindref="member">PhysicsConstraintConeTwist::create</ref>()</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a947d157eba75740eb5ef4cd2a2d84fa7" kindref="member">PhysicsConstraintConeTwist</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_world_1a916b92be91d763c4dda322458eca74be" kindref="member">World::getInstance</ref>()-&gt;<ref refid="classnjli_1_1_world_1a02d2a4cda6b5a38bc1db523aba97c52c" kindref="member">getWorldFactory</ref>()-&gt;<ref refid="classnjli_1_1_world_factory_1a2998139e94a357430e4d3a26606d7efb" kindref="member">create</ref>(<ref refid="classnjli_1_1_physics_constraint_cone_twist_1ae4a36ebf24e097f5a93d80b5ccf1fd0e" kindref="member">PhysicsConstraintConeTwist::type</ref>()));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>PhysicsConstraintConeTwist<sp/>*<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a21d0e8f2ac429579de20dbe3d12d7fff" kindref="member">PhysicsConstraintConeTwist::create</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PhysicsConstraintConeTwistBuilder<sp/>&amp;builder)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AbstractBuilder<sp/>*b<sp/>=<sp/>(AbstractBuilder<sp/>*)&amp;builder;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a947d157eba75740eb5ef4cd2a2d84fa7" kindref="member">PhysicsConstraintConeTwist</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_world_1a916b92be91d763c4dda322458eca74be" kindref="member">World::getInstance</ref>()-&gt;<ref refid="classnjli_1_1_world_1a02d2a4cda6b5a38bc1db523aba97c52c" kindref="member">getWorldFactory</ref>()-&gt;<ref refid="classnjli_1_1_world_factory_1a2998139e94a357430e4d3a26606d7efb" kindref="member">create</ref>(*b));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>PhysicsConstraintConeTwist<sp/>*<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a9a2c00c56e5348e1d87551590ca52b66" kindref="member">PhysicsConstraintConeTwist::clone</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PhysicsConstraintConeTwist<sp/>&amp;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a947d157eba75740eb5ef4cd2a2d84fa7" kindref="member">PhysicsConstraintConeTwist</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_world_1a916b92be91d763c4dda322458eca74be" kindref="member">World::getInstance</ref>()-&gt;<ref refid="classnjli_1_1_world_1a02d2a4cda6b5a38bc1db523aba97c52c" kindref="member">getWorldFactory</ref>()-&gt;<ref refid="classnjli_1_1_world_factory_1ad45e7eac9f28b683a29fc3e397549d84" kindref="member">clone</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>PhysicsConstraintConeTwist<sp/>*<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a9d06037db8e44827196f78aef37f2f36" kindref="member">PhysicsConstraintConeTwist::copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PhysicsConstraintConeTwist<sp/>&amp;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a947d157eba75740eb5ef4cd2a2d84fa7" kindref="member">PhysicsConstraintConeTwist</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_world_1a916b92be91d763c4dda322458eca74be" kindref="member">World::getInstance</ref>()-&gt;<ref refid="classnjli_1_1_world_1a02d2a4cda6b5a38bc1db523aba97c52c" kindref="member">getWorldFactory</ref>()-&gt;<ref refid="classnjli_1_1_world_factory_1ad45e7eac9f28b683a29fc3e397549d84" kindref="member">clone</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_abstract_factory_object_1a8776a16a4f861e556bd9395c8a93ba71" kindref="member">PhysicsConstraintConeTwist::destroy</ref>(PhysicsConstraintConeTwist<sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_abstract_factory_object_1a8776a16a4f861e556bd9395c8a93ba71" kindref="member">PhysicsConstraint::destroy</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a94b877afc36d4815fc1541e463b5d0be" kindref="member">PhysicsConstraintConeTwist::load</ref>(PhysicsConstraintConeTwist<sp/>&amp;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>lua_State<sp/>*L,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Push<sp/>another<sp/>reference<sp/>to<sp/>the<sp/>table<sp/>on<sp/>top<sp/>of<sp/>the<sp/>stack<sp/>(so<sp/>we<sp/>know</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>where<sp/>it<sp/>is,<sp/>and<sp/>this<sp/>function<sp/>can<sp/>work<sp/>for<sp/>negative,<sp/>positive<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pseudo<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushvalue(L,<sp/>index);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stack<sp/>now<sp/>contains:<sp/>-1<sp/>=&gt;<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushnil(L);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stack<sp/>now<sp/>contains:<sp/>-1<sp/>=&gt;<sp/>nil;<sp/>-2<sp/>=&gt;<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(lua_next(L,<sp/>-2))</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stack<sp/>now<sp/>contains:<sp/>-1<sp/>=&gt;<sp/>value;<sp/>-2<sp/>=&gt;<sp/>key;<sp/>-3<sp/>=&gt;<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>the<sp/>key<sp/>so<sp/>that<sp/>lua_tostring<sp/>does<sp/>not<sp/>modify<sp/>the<sp/>original</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushvalue(L,<sp/>-2);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stack<sp/>now<sp/>contains:<sp/>-1<sp/>=&gt;<sp/>key;<sp/>-2<sp/>=&gt;<sp/>value;<sp/>-3<sp/>=&gt;<sp/>key;<sp/>-4<sp/>=&gt;<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key<sp/>=<sp/>lua_tostring(L,<sp/>-1);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value<sp/>=<sp/>lua_tostring(L,<sp/>-2);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lua_istable(L,<sp/>-2))</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a94b877afc36d4815fc1541e463b5d0be" kindref="member">PhysicsConstraintConeTwist::load</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>L,<sp/>-2);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lua_isnumber(L,<sp/>index))</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>number<sp/>=<sp/>lua_tonumber(L,<sp/>index);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s<sp/>=&gt;<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>key,<sp/>number);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lua_isstring(L,<sp/>index))</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*v<sp/>=<sp/>lua_tostring(L,<sp/>index);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s<sp/>=&gt;<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>key,<sp/>v);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lua_isboolean(L,<sp/>index))</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>lua_toboolean(L,<sp/>index);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s<sp/>=&gt;<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>key,<sp/>v);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lua_isuserdata(L,<sp/>index))</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swig_lua_userdata<sp/>*usr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swig_type_info<sp/>*type;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(lua_isuserdata(L,index));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usr=(swig_lua_userdata*)lua_touserdata(L,index);<sp/><sp/>/*<sp/>get<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>usr-&gt;type;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>njli::AbstractFactoryObject<sp/>*object<sp/>=<sp/>static_cast&lt;njli::AbstractFactoryObject*&gt;(usr-&gt;ptr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;%s<sp/>=&gt;<sp/>%d:%s\n&quot;,<sp/>key,<sp/>object-&gt;getType(),<sp/>object-&gt;getClassName());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pop<sp/>value<sp/>+<sp/>copy<sp/>of<sp/>key,<sp/>leaving<sp/>original<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pop(L,<sp/>2);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stack<sp/>now<sp/>contains:<sp/>-1<sp/>=&gt;<sp/>key;<sp/>-2<sp/>=&gt;<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stack<sp/>now<sp/>contains:<sp/>-1<sp/>=&gt;<sp/>table<sp/>(when<sp/>lua_next<sp/>returns<sp/>0<sp/>it<sp/>pops<sp/>the<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>does<sp/>not<sp/>push<sp/>anything.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pop<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pop(L,<sp/>1);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stack<sp/>is<sp/>now<sp/>the<sp/>same<sp/>as<sp/>it<sp/>was<sp/>on<sp/>entry<sp/>to<sp/>this<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_util_8h_1a10e94b422ef0c20dcdec20d31a1f5049" kindref="member">u32</ref><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1ae4a36ebf24e097f5a93d80b5ccf1fd0e" kindref="member">PhysicsConstraintConeTwist::type</ref>()</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacenjli_1a6d56d4fbaf89fcf3e3d32839df05b444a40e44c4e7b4d13076b643e569a63a350" kindref="member">JLI_OBJECT_TYPE_PhysicsConstraintConeTwist</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a62ccb09aa4eb5e21fa325888b619b434" kindref="member">PhysicsConstraintConeTwist::setNodes</ref>(Node<sp/>*nodeA,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btTransform&amp;<sp/>rbAFrame)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a62ccb09aa4eb5e21fa325888b619b434" kindref="member">setNodes</ref>(nodeA,<sp/><ref refid="_abstract_state_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>rbAFrame,<sp/>rbAFrame);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a62ccb09aa4eb5e21fa325888b619b434" kindref="member">PhysicsConstraintConeTwist::setNodes</ref>(Node<sp/>*nodeA,<sp/>Node<sp/>*nodeB,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btTransform&amp;<sp/>rbAFrame,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btTransform&amp;<sp/>rbBFrame)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_log_8h_1a5687826f07a383abedc6329b6a07f40b" kindref="member">DEBUG_ASSERT</ref>(nodeA<sp/>||<sp/>nodeB);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nodeA<sp/>&amp;&amp;<sp/>!nodeA-&gt;getPhysicsBody()-&gt;isDynamicPhysics())</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_log_8h_1ad55d2448f9da3e6491c66d9772d6501f" kindref="member">DEBUG_LOG_W</ref>(<ref refid="_physics_constraint_cone_twist_8cpp_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>nodeA-&gt;getName());</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nodeB<sp/>&amp;&amp;<sp/>!nodeB-&gt;getPhysicsBody()-&gt;isDynamicPhysics())</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_log_8h_1ad55d2448f9da3e6491c66d9772d6501f" kindref="member">DEBUG_LOG_W</ref>(<ref refid="_physics_constraint_cone_twist_8cpp_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>nodeB-&gt;getName());</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nodeA)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_log_8h_1a5687826f07a383abedc6329b6a07f40b" kindref="member">DEBUG_ASSERT</ref>(nodeA-&gt;getPhysicsBody());</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nodeB)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_log_8h_1a5687826f07a383abedc6329b6a07f40b" kindref="member">DEBUG_ASSERT</ref>(nodeB-&gt;getPhysicsBody());</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>btRigidBody<sp/>*rigidBodyA<sp/>=<sp/><ref refid="_abstract_state_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>btRigidBody<sp/>*rigidBodyB<sp/>=<sp/><ref refid="_abstract_state_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nodeA)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rigidBodyA<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">btRigidBody*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(nodeA-&gt;getPhysicsBody()-&gt;getCollisionObject());</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nodeB)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rigidBodyB<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">btRigidBody*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(nodeB-&gt;getPhysicsBody()-&gt;getCollisionObject());</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a7af1e9aaa2f6aadb05b4a378c316f0c2" kindref="member">removeConstraint</ref>();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rigidBodyA<sp/>&amp;&amp;<sp/>!rigidBodyB)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a9a2b6ba85104cb0aacc840dfa28625cf" kindref="member">m_btConeTwistConstraint</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>btConeTwistConstraint(*rigidBodyA,<sp/>rbAFrame);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rigidBodyA<sp/>&amp;&amp;<sp/>rigidBodyB)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a9a2b6ba85104cb0aacc840dfa28625cf" kindref="member">m_btConeTwistConstraint</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>btConeTwistConstraint(*rigidBodyA,<sp/>*rigidBodyB,<sp/>rbAFrame,<sp/>rbBFrame);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rigidBodyA)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_physics_constraint_1a5323b343249efcc5d28f295c737318aa" kindref="member">getNodeA</ref>()-&gt;<ref refid="classnjli_1_1_node_1a54722d104f4e4b81908ab21369aba611" kindref="member">getPhysicsBody</ref>()-&gt;<ref refid="classnjli_1_1_physics_body_1aada3ab35adecd8cb382411356bf6fb3e" kindref="member">addPhysicsConstraint</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rigidBodyB)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_physics_constraint_1a84ad4667ddcece00d901d074985bcf40" kindref="member">getNodeB</ref>()-&gt;<ref refid="classnjli_1_1_node_1a54722d104f4e4b81908ab21369aba611" kindref="member">getPhysicsBody</ref>()-&gt;<ref refid="classnjli_1_1_physics_body_1aada3ab35adecd8cb382411356bf6fb3e" kindref="member">addPhysicsConstraint</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Scene<sp/>*scene<sp/>=<sp/><ref refid="classnjli_1_1_world_1a916b92be91d763c4dda322458eca74be" kindref="member">njli::World::getInstance</ref>()-&gt;<ref refid="classnjli_1_1_world_1a77de3f785d9c487c510f9061945a83ef" kindref="member">getScene</ref>();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scene-&gt;<ref refid="classnjli_1_1_scene_1a122a2588d621f218327f09b6fafaead0" kindref="member">getPhysicsWorld</ref>()-&gt;<ref refid="classnjli_1_1_physics_world_1a01043c9eab9fa91adafa957ef1e57293" kindref="member">addConstraint</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a6c8c071ebac0a8b00d66a17044c9d62a" kindref="member">PhysicsConstraintConeTwist::setAngularOnly</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>angularOnly)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>btConeTwistConstraint<sp/>*constraint<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">btConeTwistConstraint*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a429b3e1380fd6b8d61428d9e39e5e5e6" kindref="member">getConstraint</ref>());</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;setAngularOnly(angularOnly);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1aeed1b0161940309464c6f5f56de1dd22" kindref="member">PhysicsConstraintConeTwist::setLimit</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limitIndex,<ref refid="_util_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/>limitValue)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>btConeTwistConstraint<sp/>*constraint<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">btConeTwistConstraint*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a429b3e1380fd6b8d61428d9e39e5e5e6" kindref="member">getConstraint</ref>());</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;setLimit(limitIndex,<sp/>limitValue);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1aeed1b0161940309464c6f5f56de1dd22" kindref="member">PhysicsConstraintConeTwist::setLimit</ref>(<ref refid="_util_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/>_swingSpan1,<sp/><ref refid="_util_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/>_swingSpan2,<sp/><ref refid="_util_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/>_twistSpan,<sp/><ref refid="_util_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/>_softness,<sp/><ref refid="_util_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/>_biasFactor,<sp/><ref refid="_util_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/>_relaxationFactor)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>btConeTwistConstraint<sp/>*constraint<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">btConeTwistConstraint*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a429b3e1380fd6b8d61428d9e39e5e5e6" kindref="member">getConstraint</ref>());</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;setLimit(_swingSpan1,<sp/>_swingSpan2,<sp/>_twistSpan,<sp/>_softness,<sp/>_biasFactor,<sp/>_relaxationFactor);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btTransform&amp;<sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a776bead995531c3a0b8742b1a73db8a0" kindref="member">PhysicsConstraintConeTwist::getAFrame</ref>()</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>btConeTwistConstraint<sp/>*constraint<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">btConeTwistConstraint*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a429b3e1380fd6b8d61428d9e39e5e5e6" kindref="member">getConstraint</ref>());</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>constraint-&gt;getAFrame();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btTransform&amp;<sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a6ba9325b0af4611520e9fcf78eaec0e5" kindref="member">PhysicsConstraintConeTwist::getBFrame</ref>()</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>btConeTwistConstraint<sp/>*constraint<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">btConeTwistConstraint*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a429b3e1380fd6b8d61428d9e39e5e5e6" kindref="member">getConstraint</ref>());</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>constraint-&gt;getBFrame();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1aa9a5bdf9fcbebce5686c4fc630597dcc" kindref="member">PhysicsConstraintConeTwist::getSolveTwistLimit</ref>()</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>btConeTwistConstraint<sp/>*constraint<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">btConeTwistConstraint*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a429b3e1380fd6b8d61428d9e39e5e5e6" kindref="member">getConstraint</ref>());</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>constraint-&gt;getSolveTwistLimit();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1abe8033d8ead97feb20871704c0ac81a0" kindref="member">PhysicsConstraintConeTwist::getSolveSwingLimit</ref>()</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>btConeTwistConstraint<sp/>*constraint<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">btConeTwistConstraint*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a429b3e1380fd6b8d61428d9e39e5e5e6" kindref="member">getConstraint</ref>());</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>constraint-&gt;getSolveSwingLimit();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_util_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1acee80e920f51081de9354094379f7b11" kindref="member">PhysicsConstraintConeTwist::getTwistLimitSign</ref>()</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>btConeTwistConstraint<sp/>*constraint<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">btConeTwistConstraint*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a429b3e1380fd6b8d61428d9e39e5e5e6" kindref="member">getConstraint</ref>());</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>constraint-&gt;getTwistLimitSign();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_util_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a027923af16628517d65094297cb3a575" kindref="member">PhysicsConstraintConeTwist::getSwingSpan1</ref>()</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>btConeTwistConstraint<sp/>*constraint<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">btConeTwistConstraint*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a429b3e1380fd6b8d61428d9e39e5e5e6" kindref="member">getConstraint</ref>());</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>constraint-&gt;getSwingSpan2();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_util_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a08296e8ff84c002fda396b348ec622de" kindref="member">PhysicsConstraintConeTwist::getSwingSpan2</ref>()</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>btConeTwistConstraint<sp/>*constraint<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">btConeTwistConstraint*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a429b3e1380fd6b8d61428d9e39e5e5e6" kindref="member">getConstraint</ref>());</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>constraint-&gt;getSwingSpan2();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_util_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a38d2f9a65c88de728a2a1f5d3255ae24" kindref="member">PhysicsConstraintConeTwist::getTwistSpan</ref>()</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>btConeTwistConstraint<sp/>*constraint<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">btConeTwistConstraint*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a429b3e1380fd6b8d61428d9e39e5e5e6" kindref="member">getConstraint</ref>());</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>constraint-&gt;getTwistSpan();</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_util_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a456096ba5a6602c65e1cfdacd2e155ad" kindref="member">PhysicsConstraintConeTwist::getTwistAngle</ref>()</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>btConeTwistConstraint<sp/>*constraint<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">btConeTwistConstraint*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a429b3e1380fd6b8d61428d9e39e5e5e6" kindref="member">getConstraint</ref>());</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>constraint-&gt;getTwistAngle();</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1aa88ef9a706160dba1e9805171bfcbd43" kindref="member">PhysicsConstraintConeTwist::isPastSwingLimit</ref>()</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>btConeTwistConstraint<sp/>*constraint<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">btConeTwistConstraint*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a429b3e1380fd6b8d61428d9e39e5e5e6" kindref="member">getConstraint</ref>());</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>constraint-&gt;isPastSwingLimit();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a9552eedd807cd2833d584d0ccbf74f91" kindref="member">PhysicsConstraintConeTwist::setDamping</ref>(<ref refid="_util_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/>damping)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>btConeTwistConstraint<sp/>*constraint<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">btConeTwistConstraint*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a429b3e1380fd6b8d61428d9e39e5e5e6" kindref="member">getConstraint</ref>());</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;setDamping(damping);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a7903e56124cef31df66e81467f4fd597" kindref="member">PhysicsConstraintConeTwist::enableMotor</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>btConeTwistConstraint<sp/>*constraint<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">btConeTwistConstraint*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a429b3e1380fd6b8d61428d9e39e5e5e6" kindref="member">getConstraint</ref>());</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;enableMotor(b);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1ad80eeca857c3ba2977181a2db59ea185" kindref="member">PhysicsConstraintConeTwist::setMaxMotorImpulse</ref>(<ref refid="_util_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/>maxMotorImpulse)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>btConeTwistConstraint<sp/>*constraint<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">btConeTwistConstraint*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a429b3e1380fd6b8d61428d9e39e5e5e6" kindref="member">getConstraint</ref>());</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;setMaxMotorImpulse(maxMotorImpulse);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a6c0ffec35cf8e2d669f7333c1d889a21" kindref="member">PhysicsConstraintConeTwist::setMaxMotorImpulseNormalized</ref>(<ref refid="_util_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/>maxMotorImpulse)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>btConeTwistConstraint<sp/>*constraint<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">btConeTwistConstraint*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a429b3e1380fd6b8d61428d9e39e5e5e6" kindref="member">getConstraint</ref>());</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;setMaxMotorImpulseNormalized(maxMotorImpulse);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_util_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a86bb590a043c9e7604e144081a86ee0d" kindref="member">PhysicsConstraintConeTwist::getFixThresh</ref>()</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>btConeTwistConstraint<sp/>*constraint<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">btConeTwistConstraint*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a429b3e1380fd6b8d61428d9e39e5e5e6" kindref="member">getConstraint</ref>());</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>constraint-&gt;getFixThresh();</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a0bfeee1933ef308fc523f58421dcb9a2" kindref="member">PhysicsConstraintConeTwist::setFixThresh</ref>(<ref refid="_util_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/>fixThresh)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>btConeTwistConstraint<sp/>*constraint<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">btConeTwistConstraint*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a429b3e1380fd6b8d61428d9e39e5e5e6" kindref="member">getConstraint</ref>());</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;setFixThresh(fixThresh);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1aa9330c775b1d77026c0b3b23d8750bab" kindref="member">PhysicsConstraintConeTwist::setMotorTarget</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btQuaternion<sp/>&amp;q)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>btConeTwistConstraint<sp/>*constraint<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">btConeTwistConstraint*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a429b3e1380fd6b8d61428d9e39e5e5e6" kindref="member">getConstraint</ref>());</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;setMotorTarget(q);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a8e8f494383a0db257761c61924481232" kindref="member">PhysicsConstraintConeTwist::setMotorTargetInConstraintSpace</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btQuaternion<sp/>&amp;q)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>btConeTwistConstraint<sp/>*constraint<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">btConeTwistConstraint*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a429b3e1380fd6b8d61428d9e39e5e5e6" kindref="member">getConstraint</ref>());</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;setMotorTargetInConstraintSpace(q);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>btVector3<sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a681bcd999ffed5134c998dc568d6c67c" kindref="member">PhysicsConstraintConeTwist::getPointForAngle</ref>(<ref refid="_util_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/>fAngleInRadians,<sp/><ref refid="_util_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/>fLength)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="372"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btConeTwistConstraint<sp/>*constraint<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">btConeTwistConstraint*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a429b3e1380fd6b8d61428d9e39e5e5e6" kindref="member">getConstraint</ref>());</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>constraint-&gt;GetPointForAngle(fAngleInRadians,<sp/>fLength);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a8bbcee31a07d672830c0079e8559fde4" kindref="member">PhysicsConstraintConeTwist::setFrames</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btTransform&amp;<sp/>frameA,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btTransform&amp;<sp/>frameB)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>btConeTwistConstraint<sp/>*constraint<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">btConeTwistConstraint*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a429b3e1380fd6b8d61428d9e39e5e5e6" kindref="member">getConstraint</ref>());</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;setFrames(frameA,<sp/>frameB);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btTransform&amp;<sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a47eee4ef52dcc389766ab89a76206abe" kindref="member">PhysicsConstraintConeTwist::getFrameOffsetA</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="384"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btConeTwistConstraint<sp/>*constraint<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">btConeTwistConstraint*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a429b3e1380fd6b8d61428d9e39e5e5e6" kindref="member">getConstraint</ref>());</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>constraint-&gt;getFrameOffsetA();</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btTransform&amp;<sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a66dfb2a3a35461b49e0f44068e781d9f" kindref="member">PhysicsConstraintConeTwist::getFrameOffsetB</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="390"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btConeTwistConstraint<sp/>*constraint<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">btConeTwistConstraint*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a429b3e1380fd6b8d61428d9e39e5e5e6" kindref="member">getConstraint</ref>());</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>constraint-&gt;getFrameOffsetB();</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>btTypedConstraint<sp/>*<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a429b3e1380fd6b8d61428d9e39e5e5e6" kindref="member">PhysicsConstraintConeTwist::getConstraint</ref>()</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a9a2b6ba85104cb0aacc840dfa28625cf" kindref="member">m_btConeTwistConstraint</ref>;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btTypedConstraint<sp/>*<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a429b3e1380fd6b8d61428d9e39e5e5e6" kindref="member">PhysicsConstraintConeTwist::getConstraint</ref>()</highlight><highlight class="keyword">const</highlight></codeline>
<codeline lineno="406"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a9a2b6ba85104cb0aacc840dfa28625cf" kindref="member">m_btConeTwistConstraint</ref>;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a7af1e9aaa2f6aadb05b4a378c316f0c2" kindref="member">PhysicsConstraintConeTwist::removeConstraint</ref>()</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_physics_constraint_1af8acfcb3256012a036dc5ae78820f740" kindref="member">PhysicsConstraint::removeConstraint</ref>();</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_constraint_cone_twist_1a9a2b6ba85104cb0aacc840dfa28625cf" kindref="member">m_btConeTwistConstraint</ref>)</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a9a2b6ba85104cb0aacc840dfa28625cf" kindref="member">m_btConeTwistConstraint</ref>;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_physics_constraint_cone_twist_1a9a2b6ba85104cb0aacc840dfa28625cf" kindref="member">m_btConeTwistConstraint</ref><sp/>=<sp/><ref refid="_abstract_state_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/PhysicsConstraintConeTwist.cpp"/>
  </compounddef>
</doxygen>
