<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_shader_program_8cpp" kind="file">
    <compoundname>ShaderProgram.cpp</compoundname>
    <includes refid="_shader_program_8h" local="yes">ShaderProgram.h</includes>
    <includes refid="_j_l_i_factory_types_8h" local="yes">JLIFactoryTypes.h</includes>
    <includes refid="_world_8h" local="yes">World.h</includes>
    <includes refid="_shader_program_builder_8h" local="yes">ShaderProgramBuilder.h</includes>
    <includes local="yes">GLPlatform.h</includes>
    <includes refid="_camera_8h" local="yes">Camera.h</includes>
    <includes refid="_log_8h" local="yes">Log.h</includes>
    <includes local="yes">btPrint.h</includes>
    <incdepgraph>
      <node id="31910">
        <label>btIDebugDraw.h</label>
      </node>
      <node id="31878">
        <label>lua.hpp</label>
      </node>
      <node id="31885">
        <label>WorldLuaVirtualMachine.h</label>
        <link refid="_world_lua_virtual_machine_8h"/>
        <childnode refid="31872" relation="include">
        </childnode>
        <childnode refid="31867" relation="include">
        </childnode>
        <childnode refid="31878" relation="include">
        </childnode>
        <childnode refid="31886" relation="include">
        </childnode>
        <childnode refid="31888" relation="include">
        </childnode>
        <childnode refid="31891" relation="include">
        </childnode>
        <childnode refid="31893" relation="include">
        </childnode>
        <childnode refid="31894" relation="include">
        </childnode>
        <childnode refid="31895" relation="include">
        </childnode>
        <childnode refid="31896" relation="include">
        </childnode>
        <childnode refid="31897" relation="include">
        </childnode>
        <childnode refid="31865" relation="include">
        </childnode>
      </node>
      <node id="31902">
        <label>Camera.h</label>
        <link refid="_camera_8h"/>
        <childnode refid="31863" relation="include">
        </childnode>
        <childnode refid="31864" relation="include">
        </childnode>
        <childnode refid="31876" relation="include">
        </childnode>
        <childnode refid="31903" relation="include">
        </childnode>
        <childnode refid="31878" relation="include">
        </childnode>
      </node>
      <node id="31868">
        <label>Log.h</label>
        <link refid="_log_8h"/>
        <childnode refid="31869" relation="include">
        </childnode>
      </node>
      <node id="31918">
        <label>netinet/in.h</label>
      </node>
      <node id="31873">
        <label>AbstractDecorator.h</label>
        <link refid="_abstract_decorator_8h"/>
        <childnode refid="31867" relation="include">
        </childnode>
        <childnode refid="31874" relation="include">
        </childnode>
        <childnode refid="31872" relation="include">
        </childnode>
      </node>
      <node id="31884">
        <label>queue</label>
      </node>
      <node id="31923">
        <label>ShaderProgramBuilder.h</label>
        <link refid="_shader_program_builder_8h"/>
        <childnode refid="31865" relation="include">
        </childnode>
        <childnode refid="31867" relation="include">
        </childnode>
        <childnode refid="31863" relation="include">
        </childnode>
        <childnode refid="31875" relation="include">
        </childnode>
        <childnode refid="31878" relation="include">
        </childnode>
      </node>
      <node id="31862">
        <label>ShaderProgram.h</label>
        <link refid="_shader_program_8h"/>
        <childnode refid="31863" relation="include">
        </childnode>
        <childnode refid="31864" relation="include">
        </childnode>
        <childnode refid="31876" relation="include">
        </childnode>
        <childnode refid="31878" relation="include">
        </childnode>
        <childnode refid="31874" relation="include">
        </childnode>
      </node>
      <node id="31904">
        <label>WorldClock.h</label>
        <link refid="_world_clock_8h"/>
        <childnode refid="31905" relation="include">
        </childnode>
        <childnode refid="31866" relation="include">
        </childnode>
        <childnode refid="31906" relation="include">
        </childnode>
        <childnode refid="31872" relation="include">
        </childnode>
      </node>
      <node id="31890">
        <label>btVector2.h</label>
      </node>
      <node id="31867">
        <label>Util.h</label>
        <link refid="_util_8h"/>
        <childnode refid="31868" relation="include">
        </childnode>
        <childnode refid="31870" relation="include">
        </childnode>
        <childnode refid="31871" relation="include">
        </childnode>
      </node>
      <node id="31898">
        <label>WorldSQLite.h</label>
        <link refid="_world_s_q_lite_8h"/>
        <childnode refid="31867" relation="include">
        </childnode>
        <childnode refid="31899" relation="include">
        </childnode>
        <childnode refid="31872" relation="include">
        </childnode>
      </node>
      <node id="31886">
        <label>AbstractState.h</label>
        <link refid="_abstract_state_8h"/>
        <childnode refid="31863" relation="include">
        </childnode>
        <childnode refid="31867" relation="include">
        </childnode>
        <childnode refid="31887" relation="include">
        </childnode>
        <childnode refid="31870" relation="include">
        </childnode>
      </node>
      <node id="31870">
        <label>stdlib.h</label>
      </node>
      <node id="31889">
        <label>DeviceInputTime.h</label>
        <link refid="_device_input_time_8h"/>
        <childnode refid="31867" relation="include">
        </childnode>
      </node>
      <node id="31922">
        <label>btQuickprof.h</label>
      </node>
      <node id="31912">
        <label>File.h</label>
        <link refid="_file_8h"/>
        <childnode refid="31869" relation="include">
        </childnode>
        <childnode refid="31871" relation="include">
        </childnode>
        <childnode refid="31870" relation="include">
        </childnode>
      </node>
      <node id="31911">
        <label>WorldHUD.h</label>
        <link refid="_world_h_u_d_8h"/>
        <childnode refid="31866" relation="include">
        </childnode>
        <childnode refid="31912" relation="include">
        </childnode>
        <childnode refid="31867" relation="include">
        </childnode>
        <childnode refid="31913" relation="include">
        </childnode>
        <childnode refid="31914" relation="include">
        </childnode>
        <childnode refid="31876" relation="include">
        </childnode>
        <childnode refid="31865" relation="include">
        </childnode>
        <childnode refid="31874" relation="include">
        </childnode>
      </node>
      <node id="31908">
        <label>Geometry.h</label>
        <link refid="_geometry_8h"/>
        <childnode refid="31863" relation="include">
        </childnode>
        <childnode refid="31864" relation="include">
        </childnode>
        <childnode refid="31878" relation="include">
        </childnode>
        <childnode refid="31909" relation="include">
        </childnode>
        <childnode refid="31872" relation="include">
        </childnode>
        <childnode refid="31890" relation="include">
        </childnode>
        <childnode refid="31903" relation="include">
        </childnode>
      </node>
      <node id="31905">
        <label>AbstractClock.h</label>
        <link refid="_abstract_clock_8h"/>
        <childnode refid="31867" relation="include">
        </childnode>
        <childnode refid="31872" relation="include">
        </childnode>
      </node>
      <node id="31872">
        <label>string</label>
      </node>
      <node id="31893">
        <label>Scene.h</label>
        <link refid="_scene_8h"/>
        <childnode refid="31863" relation="include">
        </childnode>
        <childnode refid="31864" relation="include">
        </childnode>
        <childnode refid="31865" relation="include">
        </childnode>
        <childnode refid="31876" relation="include">
        </childnode>
        <childnode refid="31878" relation="include">
        </childnode>
        <childnode refid="31872" relation="include">
        </childnode>
        <childnode refid="31874" relation="include">
        </childnode>
      </node>
      <node id="31888">
        <label>DeviceTouch.h</label>
        <link refid="_device_touch_8h"/>
        <childnode refid="31889" relation="include">
        </childnode>
        <childnode refid="31890" relation="include">
        </childnode>
        <childnode refid="31872" relation="include">
        </childnode>
      </node>
      <node id="31883">
        <label>map</label>
      </node>
      <node id="31891">
        <label>Node.h</label>
        <link refid="_node_8h"/>
        <childnode refid="31863" relation="include">
        </childnode>
        <childnode refid="31864" relation="include">
        </childnode>
        <childnode refid="31892" relation="include">
        </childnode>
        <childnode refid="31876" relation="include">
        </childnode>
        <childnode refid="31890" relation="include">
        </childnode>
        <childnode refid="31878" relation="include">
        </childnode>
        <childnode refid="31872" relation="include">
        </childnode>
      </node>
      <node id="31919">
        <label>WorldState.h</label>
        <link refid="_world_state_8h"/>
        <childnode refid="31863" relation="include">
        </childnode>
        <childnode refid="31886" relation="include">
        </childnode>
        <childnode refid="31888" relation="include">
        </childnode>
        <childnode refid="31878" relation="include">
        </childnode>
      </node>
      <node id="31903">
        <label>btVector3.h</label>
      </node>
      <node id="31865">
        <label>btAlignedObjectArray.h</label>
      </node>
      <node id="31897">
        <label>PhysicsRayContact.h</label>
        <link refid="_physics_ray_contact_8h"/>
        <childnode refid="31863" relation="include">
        </childnode>
        <childnode refid="31864" relation="include">
        </childnode>
        <childnode refid="31878" relation="include">
        </childnode>
      </node>
      <node id="31899">
        <label>sqlite3.h</label>
      </node>
      <node id="31863">
        <label>AbstractBuilder.h</label>
        <link refid="_abstract_builder_8h"/>
        <childnode refid="31864" relation="include">
        </childnode>
        <childnode refid="31867" relation="include">
        </childnode>
        <childnode refid="31875" relation="include">
        </childnode>
        <childnode refid="31872" relation="include">
        </childnode>
      </node>
      <node id="31924">
        <label>btPrint.h</label>
      </node>
      <node id="31875">
        <label>btSerializer.h</label>
      </node>
      <node id="31877">
        <label>btBroadphaseProxy.h</label>
      </node>
      <node id="31907">
        <label>WorldDebugDrawer.h</label>
        <link refid="_world_debug_drawer_8h"/>
        <childnode refid="31872" relation="include">
        </childnode>
        <childnode refid="31908" relation="include">
        </childnode>
        <childnode refid="31910" relation="include">
        </childnode>
      </node>
      <node id="31906">
        <label>btClock.h</label>
      </node>
      <node id="31917">
        <label>WorldSocket.h</label>
        <link refid="_world_socket_8h"/>
        <childnode refid="31918" relation="include">
        </childnode>
        <childnode refid="31866" relation="include">
        </childnode>
        <childnode refid="31884" relation="include">
        </childnode>
        <childnode refid="31872" relation="include">
        </childnode>
        <childnode refid="31912" relation="include">
        </childnode>
      </node>
      <node id="31901">
        <label>GLPlatform.h</label>
      </node>
      <node id="31881">
        <label>WorldFactory.h</label>
        <link refid="_world_factory_8h"/>
        <childnode refid="31867" relation="include">
        </childnode>
        <childnode refid="31865" relation="include">
        </childnode>
        <childnode refid="31882" relation="include">
        </childnode>
        <childnode refid="31875" relation="include">
        </childnode>
        <childnode refid="31863" relation="include">
        </childnode>
        <childnode refid="31864" relation="include">
        </childnode>
        <childnode refid="31883" relation="include">
        </childnode>
        <childnode refid="31884" relation="include">
        </childnode>
        <childnode refid="31872" relation="include">
        </childnode>
        <childnode refid="31874" relation="include">
        </childnode>
        <childnode refid="31876" relation="include">
        </childnode>
      </node>
      <node id="31895">
        <label>btManifoldPoint.h</label>
      </node>
      <node id="31887">
        <label>btScalar.h</label>
      </node>
      <node id="31909">
        <label>bitset</label>
      </node>
      <node id="31892">
        <label>AbstractActionable.h</label>
        <link refid="_abstract_actionable_8h"/>
        <childnode refid="31867" relation="include">
        </childnode>
        <childnode refid="31872" relation="include">
        </childnode>
        <childnode refid="31884" relation="include">
        </childnode>
        <childnode refid="31874" relation="include">
        </childnode>
      </node>
      <node id="31882">
        <label>btHashMap.h</label>
      </node>
      <node id="31874">
        <label>vector</label>
      </node>
      <node id="31915">
        <label>WorldInput.h</label>
        <link refid="_world_input_8h"/>
        <childnode refid="31866" relation="include">
        </childnode>
        <childnode refid="31872" relation="include">
        </childnode>
      </node>
      <node id="31894">
        <label>btDispatcher.h</label>
      </node>
      <node id="31866">
        <label>AbstractObject.h</label>
        <link refid="_abstract_object_8h"/>
        <childnode refid="31867" relation="include">
        </childnode>
        <childnode refid="31872" relation="include">
        </childnode>
        <childnode refid="31873" relation="include">
        </childnode>
      </node>
      <node id="31876">
        <label>JLIFactoryTypes.h</label>
        <link refid="_j_l_i_factory_types_8h"/>
        <childnode refid="31867" relation="include">
        </childnode>
        <childnode refid="31877" relation="include">
        </childnode>
      </node>
      <node id="31861">
        <label>/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/render/OpenGLES20/ShaderProgram.cpp</label>
        <link refid="ShaderProgram.cpp"/>
        <childnode refid="31862" relation="include">
        </childnode>
        <childnode refid="31876" relation="include">
        </childnode>
        <childnode refid="31879" relation="include">
        </childnode>
        <childnode refid="31923" relation="include">
        </childnode>
        <childnode refid="31901" relation="include">
        </childnode>
        <childnode refid="31902" relation="include">
        </childnode>
        <childnode refid="31868" relation="include">
        </childnode>
        <childnode refid="31924" relation="include">
        </childnode>
      </node>
      <node id="31914">
        <label>AbstractFrameBufferObject.h</label>
        <link refid="_abstract_frame_buffer_object_8h"/>
        <childnode refid="31867" relation="include">
        </childnode>
      </node>
      <node id="31920">
        <label>WorldStateMachine.h</label>
        <link refid="_world_state_machine_8h"/>
        <childnode refid="31863" relation="include">
        </childnode>
        <childnode refid="31921" relation="include">
        </childnode>
        <childnode refid="31878" relation="include">
        </childnode>
      </node>
      <node id="31880">
        <label>cstddef</label>
      </node>
      <node id="31879">
        <label>World.h</label>
        <link refid="_world_8h"/>
        <childnode refid="31867" relation="include">
        </childnode>
        <childnode refid="31880" relation="include">
        </childnode>
        <childnode refid="31881" relation="include">
        </childnode>
        <childnode refid="31885" relation="include">
        </childnode>
        <childnode refid="31898" relation="include">
        </childnode>
        <childnode refid="31900" relation="include">
        </childnode>
        <childnode refid="31902" relation="include">
        </childnode>
        <childnode refid="31904" relation="include">
        </childnode>
        <childnode refid="31907" relation="include">
        </childnode>
        <childnode refid="31911" relation="include">
        </childnode>
        <childnode refid="31915" relation="include">
        </childnode>
        <childnode refid="31916" relation="include">
        </childnode>
        <childnode refid="31917" relation="include">
        </childnode>
        <childnode refid="31919" relation="include">
        </childnode>
        <childnode refid="31920" relation="include">
        </childnode>
        <childnode refid="31872" relation="include">
        </childnode>
      </node>
      <node id="31900">
        <label>WorldSound.h</label>
        <link refid="_world_sound_8h"/>
        <childnode refid="31901" relation="include">
        </childnode>
        <childnode refid="31866" relation="include">
        </childnode>
        <childnode refid="31867" relation="include">
        </childnode>
        <childnode refid="31872" relation="include">
        </childnode>
      </node>
      <node id="31869">
        <label>Macros.h</label>
        <link refid="_macros_8h"/>
      </node>
      <node id="31913">
        <label>nanovg.h</label>
      </node>
      <node id="31896">
        <label>Action.h</label>
        <link refid="_action_8h"/>
        <childnode refid="31892" relation="include">
        </childnode>
        <childnode refid="31863" relation="include">
        </childnode>
        <childnode refid="31864" relation="include">
        </childnode>
        <childnode refid="31876" relation="include">
        </childnode>
        <childnode refid="31865" relation="include">
        </childnode>
        <childnode refid="31878" relation="include">
        </childnode>
        <childnode refid="31884" relation="include">
        </childnode>
        <childnode refid="31874" relation="include">
        </childnode>
      </node>
      <node id="31916">
        <label>WorldResourceLoader.h</label>
        <link refid="_world_resource_loader_8h"/>
        <childnode refid="31866" relation="include">
        </childnode>
        <childnode refid="31876" relation="include">
        </childnode>
        <childnode refid="31882" relation="include">
        </childnode>
        <childnode refid="31874" relation="include">
        </childnode>
      </node>
      <node id="31871">
        <label>stdio.h</label>
      </node>
      <node id="31864">
        <label>AbstractFactoryObject.h</label>
        <link refid="_abstract_factory_object_8h"/>
        <childnode refid="31865" relation="include">
        </childnode>
        <childnode refid="31866" relation="include">
        </childnode>
        <childnode refid="31867" relation="include">
        </childnode>
        <childnode refid="31875" relation="include">
        </childnode>
      </node>
      <node id="31921">
        <label>AbstractStateMachine.h</label>
        <link refid="_abstract_state_machine_8h"/>
        <childnode refid="31864" relation="include">
        </childnode>
        <childnode refid="31886" relation="include">
        </childnode>
        <childnode refid="31922" relation="include">
        </childnode>
        <childnode refid="31884" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacenjli">njli</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="_shader_program_8cpp_1afc3d101f633a076cc1ca84b85b6224b2" prot="public" static="no">
        <name>TAG</name>
        <initializer>&quot;ShaderProgram.cpp&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/render/OpenGLES20/ShaderProgram.cpp" line="17" column="10" bodyfile="/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/render/OpenGLES20/ShaderProgram.cpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_shader_program_8cpp_1a4d0768c0d97829b5c252f9643bdc19f5" prot="public" static="no">
        <name>FORMATSTRING</name>
        <initializer>&quot;{\&quot;njli::ShaderProgram\&quot;:[]}&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/render/OpenGLES20/ShaderProgram.cpp" line="18" column="9" bodyfile="/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/render/OpenGLES20/ShaderProgram.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76" prot="public" static="no">
        <name>njliGLSLVarType</name>
        <enumvalue id="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a242c7231fc321d478c00f10f4272b70d" prot="public">
          <name>JLI_GL_FLOAT</name>
          <initializer>= GL_FLOAT</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a6ebbac98c1d4eabc23ba925a81d8d765" prot="public">
          <name>JLI_GL_FLOAT_VEC2</name>
          <initializer>= GL_FLOAT_VEC2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76abb49eeb029850998384514040c305f4f" prot="public">
          <name>JLI_GL_FLOAT_VEC3</name>
          <initializer>= GL_FLOAT_VEC3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a2bbc696d3228a611ce93809205a42c59" prot="public">
          <name>JLI_GL_FLOAT_VEC4</name>
          <initializer>= GL_FLOAT_VEC4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76ad2013f7125bcff021f5c4130073c2cb1" prot="public">
          <name>JLI_GL_INT</name>
          <initializer>= GL_INT</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a558de10db61330e8d2045d1b07138d23" prot="public">
          <name>JLI_GL_INT_VEC2</name>
          <initializer>= GL_INT_VEC2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a89116b59cf5b6023a4dbc7c89dc5d1b1" prot="public">
          <name>JLI_GL_INT_VEC3</name>
          <initializer>= GL_INT_VEC3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a7afd303bd3a3f6e189dc2d994ade0723" prot="public">
          <name>JLI_GL_INT_VEC4</name>
          <initializer>= GL_INT_VEC4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a1d5ad446cccee21364bcf66106a99329" prot="public">
          <name>JLI_GL_BOOL</name>
          <initializer>= GL_BOOL</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a25727a15bdacbbcc55e01c4c528f938b" prot="public">
          <name>JLI_GL_BOOL_VEC2</name>
          <initializer>= GL_BOOL_VEC2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a795ad4274888d42d2e9b56d13f10a50e" prot="public">
          <name>JLI_GL_BOOL_VEC3</name>
          <initializer>= GL_BOOL_VEC3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a9b692c0cb05d3a8b1222a723a3217093" prot="public">
          <name>JLI_GL_BOOL_VEC4</name>
          <initializer>= GL_BOOL_VEC4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a20761d2bf54e6096687290e2318e0674" prot="public">
          <name>JLI_GL_FLOAT_MAT2</name>
          <initializer>= GL_FLOAT_MAT2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a3271d3b416a5b661b4580d8cd646604e" prot="public">
          <name>JLI_GL_FLOAT_MAT3</name>
          <initializer>= GL_FLOAT_MAT3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76ae50f2e7c30ae626d90816f56673f4d40" prot="public">
          <name>JLI_GL_FLOAT_MAT4</name>
          <initializer>= GL_FLOAT_MAT4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a614d5b53d02c62e5eeda77d49f53e7a4" prot="public">
          <name>JLI_GL_SAMPLER_2D</name>
          <initializer>= GL_SAMPLER_2D</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76ab8ba9426681a712cc11a81550fbbacb5" prot="public">
          <name>JLI_GL_SAMPLER_CUBE</name>
          <initializer>= GL_SAMPLER_CUBE</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/render/OpenGLES20/ShaderProgram.cpp" line="22" column="1" bodyfile="/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/render/OpenGLES20/ShaderProgram.cpp" bodystart="21" bodyend="40"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_shader_program_8cpp_1afe41407ce6ca87daf89bd5007f1b0442" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char* getGLSLVarTypeName</definition>
        <argsstring>(njliGLSLVarType var)</argsstring>
        <name>getGLSLVarTypeName</name>
        <param>
          <type><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76" kindref="member">njliGLSLVarType</ref></type>
          <declname>var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/render/OpenGLES20/ShaderProgram.cpp" line="42" column="1" bodyfile="/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/render/OpenGLES20/ShaderProgram.cpp" bodystart="42" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="_shader_program_8cpp_1a752654a5895844009d0a525c34e74c73" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>static void log_v_fixed_length</definition>
        <argsstring>(const GLchar *source, const GLint length)</argsstring>
        <name>log_v_fixed_length</name>
        <param>
          <type>const GLchar *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const GLint</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/render/OpenGLES20/ShaderProgram.cpp" line="68" column="1" bodyfile="/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/render/OpenGLES20/ShaderProgram.cpp" bodystart="68" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="_shader_program_8cpp_1a681b4173cee74384997d20f7e7d87e6d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>static void log_shader_info_log</definition>
        <argsstring>(GLuint shader_object_id)</argsstring>
        <name>log_shader_info_log</name>
        <param>
          <type>GLuint</type>
          <declname>shader_object_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/render/OpenGLES20/ShaderProgram.cpp" line="78" column="1" bodyfile="/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/render/OpenGLES20/ShaderProgram.cpp" bodystart="78" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="_shader_program_8cpp_1ae37ec69774df9a3c473958d41245c27f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_thread_8h_1af1e856da2e658414cb2456cb6f7ebc66" kindref="member">void</ref></type>
        <definition>static void log_program_info_log</definition>
        <argsstring>(GLuint program_object_id)</argsstring>
        <name>log_program_info_log</name>
        <param>
          <type>GLuint</type>
          <declname>program_object_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/render/OpenGLES20/ShaderProgram.cpp" line="94" column="1" bodyfile="/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/render/OpenGLES20/ShaderProgram.cpp" bodystart="94" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="_shader_program_8cpp_1ab964c8489d10fec2dc891d572453646f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLuint</type>
        <definition>static GLuint compile_shader</definition>
        <argsstring>(const GLenum type, const GLchar *source, const GLint length)</argsstring>
        <name>compile_shader</name>
        <param>
          <type>const GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const GLchar *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const GLint</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/render/OpenGLES20/ShaderProgram.cpp" line="109" column="1" bodyfile="/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/render/OpenGLES20/ShaderProgram.cpp" bodystart="109" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="_shader_program_8cpp_1a3b36ffaf5ba3726d1940e5a9836ffe0d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLuint</type>
        <definition>static GLuint link_program</definition>
        <argsstring>(const GLuint vertex_shader, const GLuint fragment_shader)</argsstring>
        <name>link_program</name>
        <param>
          <type>const GLuint</type>
          <declname>vertex_shader</declname>
        </param>
        <param>
          <type>const GLuint</type>
          <declname>fragment_shader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/render/OpenGLES20/ShaderProgram.cpp" line="156" column="1" bodyfile="/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/render/OpenGLES20/ShaderProgram.cpp" bodystart="156" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="_shader_program_8cpp_1a23619ee67b28c07e375171adc8bba267" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLint</type>
        <definition>static GLint validate_program</definition>
        <argsstring>(const GLuint program)</argsstring>
        <name>validate_program</name>
        <param>
          <type>const GLuint</type>
          <declname>program</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/render/OpenGLES20/ShaderProgram.cpp" line="185" column="1" bodyfile="/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/render/OpenGLES20/ShaderProgram.cpp" bodystart="185" bodyend="198"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>ShaderProgram.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>JLIGameEngineTest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Created<sp/>by<sp/>James<sp/>Folk<sp/>on<sp/>1/8/15.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2015<sp/>James<sp/>Folk.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_shader_program_8h" kindref="compound">ShaderProgram.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_j_l_i_factory_types_8h" kindref="compound">JLIFactoryTypes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_world_8h" kindref="compound">World.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_shader_program_builder_8h" kindref="compound">ShaderProgramBuilder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GLPlatform.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_camera_8h" kindref="compound">Camera.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_log_8h" kindref="compound">Log.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TAG<sp/>&quot;ShaderProgram.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FORMATSTRING<sp/>&quot;{\&quot;njli::ShaderProgram\&quot;:[]}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;btPrint.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76" kindref="member">njliGLSLVarType</ref></highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a242c7231fc321d478c00f10f4272b70d" kindref="member">JLI_GL_FLOAT</ref><sp/>=<sp/>GL_FLOAT,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a6ebbac98c1d4eabc23ba925a81d8d765" kindref="member">JLI_GL_FLOAT_VEC2</ref><sp/>=<sp/>GL_FLOAT_VEC2,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76abb49eeb029850998384514040c305f4f" kindref="member">JLI_GL_FLOAT_VEC3</ref><sp/>=<sp/>GL_FLOAT_VEC3,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a2bbc696d3228a611ce93809205a42c59" kindref="member">JLI_GL_FLOAT_VEC4</ref><sp/>=<sp/>GL_FLOAT_VEC4,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76ad2013f7125bcff021f5c4130073c2cb1" kindref="member">JLI_GL_INT</ref><sp/>=<sp/>GL_INT,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a558de10db61330e8d2045d1b07138d23" kindref="member">JLI_GL_INT_VEC2</ref><sp/>=<sp/>GL_INT_VEC2,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a89116b59cf5b6023a4dbc7c89dc5d1b1" kindref="member">JLI_GL_INT_VEC3</ref><sp/>=<sp/>GL_INT_VEC3,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a7afd303bd3a3f6e189dc2d994ade0723" kindref="member">JLI_GL_INT_VEC4</ref><sp/>=<sp/>GL_INT_VEC4,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a1d5ad446cccee21364bcf66106a99329" kindref="member">JLI_GL_BOOL</ref><sp/>=<sp/>GL_BOOL,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a25727a15bdacbbcc55e01c4c528f938b" kindref="member">JLI_GL_BOOL_VEC2</ref><sp/>=<sp/>GL_BOOL_VEC2,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a795ad4274888d42d2e9b56d13f10a50e" kindref="member">JLI_GL_BOOL_VEC3</ref><sp/>=<sp/>GL_BOOL_VEC3,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a9b692c0cb05d3a8b1222a723a3217093" kindref="member">JLI_GL_BOOL_VEC4</ref><sp/>=<sp/>GL_BOOL_VEC4,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a20761d2bf54e6096687290e2318e0674" kindref="member">JLI_GL_FLOAT_MAT2</ref><sp/>=<sp/>GL_FLOAT_MAT2,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a3271d3b416a5b661b4580d8cd646604e" kindref="member">JLI_GL_FLOAT_MAT3</ref><sp/>=<sp/>GL_FLOAT_MAT3,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76ae50f2e7c30ae626d90816f56673f4d40" kindref="member">JLI_GL_FLOAT_MAT4</ref><sp/>=<sp/>GL_FLOAT_MAT4,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a614d5b53d02c62e5eeda77d49f53e7a4" kindref="member">JLI_GL_SAMPLER_2D</ref><sp/>=<sp/>GL_SAMPLER_2D,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76ab8ba9426681a712cc11a81550fbbacb5" kindref="member">JLI_GL_SAMPLER_CUBE</ref><sp/>=<sp/>GL_SAMPLER_CUBE</highlight></codeline>
<codeline lineno="40"><highlight class="normal">};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_shader_program_8cpp_1afe41407ce6ca87daf89bd5007f1b0442" kindref="member">getGLSLVarTypeName</ref>(<ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76" kindref="member">njliGLSLVarType</ref><sp/>var)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(var)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a242c7231fc321d478c00f10f4272b70d" kindref="member">JLI_GL_FLOAT</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;GL_FLOAT&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a6ebbac98c1d4eabc23ba925a81d8d765" kindref="member">JLI_GL_FLOAT_VEC2</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;GL_FLOAT_VEC2&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76abb49eeb029850998384514040c305f4f" kindref="member">JLI_GL_FLOAT_VEC3</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;GL_FLOAT_VEC3&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a2bbc696d3228a611ce93809205a42c59" kindref="member">JLI_GL_FLOAT_VEC4</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;GL_FLOAT_VEC4&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76ad2013f7125bcff021f5c4130073c2cb1" kindref="member">JLI_GL_INT</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;GL_INT&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a558de10db61330e8d2045d1b07138d23" kindref="member">JLI_GL_INT_VEC2</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;GL_INT_VEC2&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a89116b59cf5b6023a4dbc7c89dc5d1b1" kindref="member">JLI_GL_INT_VEC3</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;GL_INT_VEC3&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a7afd303bd3a3f6e189dc2d994ade0723" kindref="member">JLI_GL_INT_VEC4</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;GL_INT_VEC4&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a1d5ad446cccee21364bcf66106a99329" kindref="member">JLI_GL_BOOL</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;GL_BOOL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a25727a15bdacbbcc55e01c4c528f938b" kindref="member">JLI_GL_BOOL_VEC2</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;GL_BOOL_VEC2&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a795ad4274888d42d2e9b56d13f10a50e" kindref="member">JLI_GL_BOOL_VEC3</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;GL_BOOL_VEC3&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a9b692c0cb05d3a8b1222a723a3217093" kindref="member">JLI_GL_BOOL_VEC4</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;GL_BOOL_VEC4&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a20761d2bf54e6096687290e2318e0674" kindref="member">JLI_GL_FLOAT_MAT2</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;GL_FLOAT_MAT2&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a3271d3b416a5b661b4580d8cd646604e" kindref="member">JLI_GL_FLOAT_MAT3</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;GL_FLOAT_MAT3&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76ae50f2e7c30ae626d90816f56673f4d40" kindref="member">JLI_GL_FLOAT_MAT4</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;GL_FLOAT_MAT4&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76a614d5b53d02c62e5eeda77d49f53e7a4" kindref="member">JLI_GL_SAMPLER_2D</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;GL_SAMPLER_2D&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_shader_program_8cpp_1acf66b2f00a2695b3b6f2d4c50d3bac76ab8ba9426681a712cc11a81550fbbacb5" kindref="member">JLI_GL_SAMPLER_CUBE</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;GL_SAMPLER_CUBE&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;UNKNOW<sp/>UNIFORM<sp/>VARIABLE&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_shader_program_8cpp_1a752654a5895844009d0a525c34e74c73" kindref="member">log_v_fixed_length</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLchar*<sp/>source,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_log_8h_1a44d8ca8ecfccda385a2802f51e3dd234" kindref="member">LOGGING_ON</ref>)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>log_buffer[length<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(log_buffer,<sp/>source,<sp/>length);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_buffer[length]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_LOG_V(TAG,<sp/>&quot;&lt;glGetShaderSource&gt;\n%s\n&lt;/glGetShaderSource&gt;&quot;,<sp/>log_buffer);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_shader_program_8cpp_1a681b4173cee74384997d20f7e7d87e6d" kindref="member">log_shader_info_log</ref>(GLuint<sp/>shader_object_id)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_log_8h_1a44d8ca8ecfccda385a2802f51e3dd234" kindref="member">LOGGING_ON</ref>)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_log_8h_1a6477a35a45a62b17c166482051cc7a15" kindref="member">DEBUG_ASSERT_PRINT</ref>(glIsShader(shader_object_id),<sp/></highlight><highlight class="stringliteral">&quot;%s:%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>a<sp/>shader&quot;</highlight><highlight class="normal">,<sp/>shader_object_id);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLint<sp/>log_length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetShaderiv(shader_object_id,<sp/>GL_INFO_LOG_LENGTH,<sp/>&amp;log_length);<ref refid="_log_8h_1afd7c1a8acb51b1311cccca3f54cedb82" kindref="member">DEBUG_GL_ERROR_WRITE</ref>(</highlight><highlight class="stringliteral">&quot;glGetShaderiv&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(log_length<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLchar<sp/>log_buffer[log_length];</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetShaderInfoLog(shader_object_id,<sp/>log_length,<sp/><ref refid="_abstract_state_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>log_buffer);<ref refid="_log_8h_1afd7c1a8acb51b1311cccca3f54cedb82" kindref="member">DEBUG_GL_ERROR_WRITE</ref>(</highlight><highlight class="stringliteral">&quot;glGetShaderInfoLog&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_log_8h_1a027235ba85c1a6314d8f8a32c05f6175" kindref="member">DEBUG_LOG_PRINT_E</ref>(<ref refid="_shader_program_8cpp_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>glGetShaderiv<sp/>log<sp/>=<sp/>`%s`&quot;</highlight><highlight class="normal">,<sp/>log_buffer);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_shader_program_8cpp_1ae37ec69774df9a3c473958d41245c27f" kindref="member">log_program_info_log</ref>(GLuint<sp/>program_object_id)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_log_8h_1a44d8ca8ecfccda385a2802f51e3dd234" kindref="member">LOGGING_ON</ref>)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_log_8h_1a6477a35a45a62b17c166482051cc7a15" kindref="member">DEBUG_ASSERT_PRINT</ref>(glIsProgram(program_object_id),<sp/></highlight><highlight class="stringliteral">&quot;%s:%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>a<sp/>shader&quot;</highlight><highlight class="normal">,<sp/>program_object_id);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLint<sp/>log_length;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetProgramiv(program_object_id,<sp/>GL_INFO_LOG_LENGTH,<sp/>&amp;log_length);<ref refid="_log_8h_1afd7c1a8acb51b1311cccca3f54cedb82" kindref="member">DEBUG_GL_ERROR_WRITE</ref>(</highlight><highlight class="stringliteral">&quot;glGetProgramiv&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(log_length<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLchar<sp/>log_buffer[log_length];</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetProgramInfoLog(program_object_id,<sp/>log_length,<sp/><ref refid="_abstract_state_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>log_buffer);<ref refid="_log_8h_1afd7c1a8acb51b1311cccca3f54cedb82" kindref="member">DEBUG_GL_ERROR_WRITE</ref>(</highlight><highlight class="stringliteral">&quot;glGetProgramInfoLog&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_log_8h_1a027235ba85c1a6314d8f8a32c05f6175" kindref="member">DEBUG_LOG_PRINT_E</ref>(<ref refid="_shader_program_8cpp_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>glGetProgramiv<sp/>log(%d)<sp/>=<sp/>`%s`&quot;</highlight><highlight class="normal">,<sp/>log_length,<sp/>log_buffer);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GLuint<sp/><ref refid="_shader_program_8cpp_1ab964c8489d10fec2dc891d572453646f" kindref="member">compile_shader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLenum<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLchar*<sp/>source,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLint<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_log_8h_1a5687826f07a383abedc6329b6a07f40b" kindref="member">DEBUG_ASSERT</ref>(source<sp/>!=<sp/><ref refid="_abstract_state_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_log_8h_1a5687826f07a383abedc6329b6a07f40b" kindref="member">DEBUG_ASSERT</ref>(type<sp/>==<sp/>GL_VERTEX_SHADER<sp/>||<sp/>type<sp/>==<sp/>GL_FRAGMENT_SHADER);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>GLuint<sp/>shader_object_id<sp/>=<sp/>glCreateShader(type);<ref refid="_log_8h_1afd7c1a8acb51b1311cccca3f54cedb82" kindref="member">DEBUG_GL_ERROR_WRITE</ref>(</highlight><highlight class="stringliteral">&quot;glCreateShader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>log_shader_info_log(shader_object_id);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>compile_status;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_log_8h_1a5687826f07a383abedc6329b6a07f40b" kindref="member">DEBUG_ASSERT</ref>(shader_object_id<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>DEBUG_LOG_V(&quot;compile_shader&quot;,<sp/>&quot;id=%d&quot;,<sp/>shader_object_id);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>GLchar**str<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GLchar*[1];</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>str[0]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GLchar[length];</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(str[0],<sp/>source);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>DEBUG_LOG_V(TAG,<sp/>&quot;source<sp/>:<sp/>%s&quot;,<sp/>source);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>glShaderSource(shader_object_id,<sp/>1,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLchar**)&amp;(str[0]),<sp/><ref refid="_abstract_state_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);<ref refid="_log_8h_1a8c242b4461ea505703d8384a309d4000" kindref="member">DEBUG_GL_ERROR_PRINT</ref>(</highlight><highlight class="stringliteral">&quot;glShaderSource&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;id:%d,source:%s&quot;</highlight><highlight class="normal">,shader_object_id,str[0]);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_shader_program_8cpp_1a681b4173cee74384997d20f7e7d87e6d" kindref="member">log_shader_info_log</ref>(shader_object_id);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>glCompileShader(shader_object_id);<ref refid="_log_8h_1afd7c1a8acb51b1311cccca3f54cedb82" kindref="member">DEBUG_GL_ERROR_WRITE</ref>(</highlight><highlight class="stringliteral">&quot;glCompileShader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_shader_program_8cpp_1a681b4173cee74384997d20f7e7d87e6d" kindref="member">log_shader_info_log</ref>(shader_object_id);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>glGetShaderiv(shader_object_id,<sp/>GL_COMPILE_STATUS,<sp/>&amp;compile_status);<ref refid="_log_8h_1afd7c1a8acb51b1311cccca3f54cedb82" kindref="member">DEBUG_GL_ERROR_WRITE</ref>(</highlight><highlight class="stringliteral">&quot;glGetShaderiv&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_shader_program_8cpp_1a681b4173cee74384997d20f7e7d87e6d" kindref="member">log_shader_info_log</ref>(shader_object_id);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>str[0];str[0]=<ref refid="_abstract_state_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>str;str=<ref refid="_abstract_state_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/><ref refid="_log_8h_1a44d8ca8ecfccda385a2802f51e3dd234" kindref="member">LOGGING_ON</ref>)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_log_8h_1a1a4e0672ab0b08c6d9b8d17c59ba4b37" kindref="member">DEBUG_LOG_D</ref>(<ref refid="_shader_program_8cpp_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Results<sp/>of<sp/>compiling<sp/>shader<sp/>source<sp/>=<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>(compile_status==GL_TRUE)?</highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLsizei<sp/>bufSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLsizei<sp/>_length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetShaderiv(shader_object_id,<sp/>GL_SHADER_SOURCE_LENGTH,<sp/>&amp;bufSize);<ref refid="_log_8h_1afd7c1a8acb51b1311cccca3f54cedb82" kindref="member">DEBUG_GL_ERROR_WRITE</ref>(</highlight><highlight class="stringliteral">&quot;glGetShaderiv&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_shader_program_8cpp_1a681b4173cee74384997d20f7e7d87e6d" kindref="member">log_shader_info_log</ref>(shader_object_id);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_log_8h_1a5687826f07a383abedc6329b6a07f40b" kindref="member">DEBUG_ASSERT</ref>(bufSize&gt;0);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLchar<sp/>*the_source<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GLchar[bufSize];</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetShaderSource(shader_object_id,<sp/>bufSize,<sp/>&amp;_length,<sp/>the_source);<ref refid="_log_8h_1afd7c1a8acb51b1311cccca3f54cedb82" kindref="member">DEBUG_GL_ERROR_WRITE</ref>(</highlight><highlight class="stringliteral">&quot;glGetShaderSource&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_shader_info_log(shader_object_id);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_shader_program_8cpp_1a752654a5895844009d0a525c34e74c73" kindref="member">log_v_fixed_length</ref>(the_source,<sp/>_length);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>the_source;the_source=<ref refid="_abstract_state_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_log_8h_1a5687826f07a383abedc6329b6a07f40b" kindref="member">DEBUG_ASSERT</ref>(compile_status<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shader_object_id;</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GLuint<sp/><ref refid="_shader_program_8cpp_1a3b36ffaf5ba3726d1940e5a9836ffe0d" kindref="member">link_program</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLuint<sp/>vertex_shader,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLuint<sp/>fragment_shader)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>GLuint<sp/>program_object_id<sp/>=<sp/>glCreateProgram();<ref refid="_log_8h_1afd7c1a8acb51b1311cccca3f54cedb82" kindref="member">DEBUG_GL_ERROR_WRITE</ref>(</highlight><highlight class="stringliteral">&quot;glCreateProgram&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>log_program_info_log(program_object_id);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>link_status;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_log_8h_1a5687826f07a383abedc6329b6a07f40b" kindref="member">DEBUG_ASSERT</ref>(program_object_id<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>DEBUG_LOG_V(&quot;link_program&quot;,<sp/>&quot;id=%d&quot;,<sp/>program_object_id);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>glAttachShader(program_object_id,<sp/>vertex_shader);<ref refid="_log_8h_1afd7c1a8acb51b1311cccca3f54cedb82" kindref="member">DEBUG_GL_ERROR_WRITE</ref>(</highlight><highlight class="stringliteral">&quot;glAttachShader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>log_shader_info_log(vertex_shader);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>log_program_info_log(program_object_id);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>glAttachShader(program_object_id,<sp/>fragment_shader);<ref refid="_log_8h_1afd7c1a8acb51b1311cccca3f54cedb82" kindref="member">DEBUG_GL_ERROR_WRITE</ref>(</highlight><highlight class="stringliteral">&quot;glAttachShader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>log_shader_info_log(fragment_shader);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>log_program_info_log(program_object_id);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>glLinkProgram(program_object_id);<ref refid="_log_8h_1afd7c1a8acb51b1311cccca3f54cedb82" kindref="member">DEBUG_GL_ERROR_WRITE</ref>(</highlight><highlight class="stringliteral">&quot;glLinkProgram&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>log_program_info_log(program_object_id);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>glGetProgramiv(program_object_id,<sp/>GL_LINK_STATUS,<sp/>&amp;link_status);<ref refid="_log_8h_1afd7c1a8acb51b1311cccca3f54cedb82" kindref="member">DEBUG_GL_ERROR_WRITE</ref>(</highlight><highlight class="stringliteral">&quot;glGetProgramiv&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>log_program_info_log(program_object_id);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_log_8h_1a44d8ca8ecfccda385a2802f51e3dd234" kindref="member">LOGGING_ON</ref>)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_log_8h_1a1a4e0672ab0b08c6d9b8d17c59ba4b37" kindref="member">DEBUG_LOG_D</ref>(<ref refid="_shader_program_8cpp_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Results<sp/>of<sp/>linking<sp/>program<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>(link_status==GL_TRUE)?</highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_shader_program_8cpp_1ae37ec69774df9a3c473958d41245c27f" kindref="member">log_program_info_log</ref>(program_object_id);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_log_8h_1a5687826f07a383abedc6329b6a07f40b" kindref="member">DEBUG_ASSERT</ref>(link_status<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>program_object_id;</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GLint<sp/><ref refid="_shader_program_8cpp_1a23619ee67b28c07e375171adc8bba267" kindref="member">validate_program</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLuint<sp/>program)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_log_8h_1a44d8ca8ecfccda385a2802f51e3dd234" kindref="member">LOGGING_ON</ref>)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>validate_status;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glValidateProgram(program);<ref refid="_log_8h_1afd7c1a8acb51b1311cccca3f54cedb82" kindref="member">DEBUG_GL_ERROR_WRITE</ref>(</highlight><highlight class="stringliteral">&quot;glValidateProgram&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_program_info_log(program);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetProgramiv(program,<sp/>GL_VALIDATE_STATUS,<sp/>&amp;validate_status);<ref refid="_log_8h_1afd7c1a8acb51b1311cccca3f54cedb82" kindref="member">DEBUG_GL_ERROR_WRITE</ref>(</highlight><highlight class="stringliteral">&quot;glGetProgramiv&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_log_8h_1a1a4e0672ab0b08c6d9b8d17c59ba4b37" kindref="member">DEBUG_LOG_D</ref>(<ref refid="_shader_program_8cpp_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Results<sp/>of<sp/>validating<sp/>program<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>(validate_status==GL_TRUE)?</highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_program_info_log(program);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>validate_status;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GL_TRUE;</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenjli" kindref="compound">njli</ref></highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_shader_program_1a5def475147030f4b08273f0dc0d8d0eb" kindref="member">ShaderProgram::ShaderProgram</ref>():</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>AbstractFactoryObject(this),</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>program(-1),</highlight><highlight class="comment">//glCreateProgram()),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>vertShader(-1),</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>fragShader(-1)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_abstract_factory_object_1a87597409cecc91b4d40be5e9b3a2d4dc" kindref="member">enableRenderObject</ref>();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_shader_program_1a5def475147030f4b08273f0dc0d8d0eb" kindref="member">ShaderProgram::ShaderProgram</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AbstractBuilder<sp/>&amp;builder):</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>AbstractFactoryObject(this),</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>program(-1),</highlight><highlight class="comment">//glCreateProgram()),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>vertShader(-1),</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>fragShader(-1)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_abstract_factory_object_1a87597409cecc91b4d40be5e9b3a2d4dc" kindref="member">enableRenderObject</ref>();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_shader_program_1a5def475147030f4b08273f0dc0d8d0eb" kindref="member">ShaderProgram::ShaderProgram</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ShaderProgram<sp/>&amp;copy):</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>AbstractFactoryObject(this),</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>program(-1),</highlight><highlight class="comment">//glCreateProgram()),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>vertShader(-1),</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>fragShader(-1)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_abstract_factory_object_1a87597409cecc91b4d40be5e9b3a2d4dc" kindref="member">enableRenderObject</ref>();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_shader_program_1a1579c6785c5b66286e777362f413a158" kindref="member">ShaderProgram::~ShaderProgram</ref>()</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_shader_program_1af93d37d88d0d56ae1dfe0a902ec7391e" kindref="member">unLoadGPU</ref>();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>ShaderProgram<sp/>&amp;<ref refid="classnjli_1_1_shader_program_1a5fcc9d59431056022b30003a6fe7a35d" kindref="member">ShaderProgram::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ShaderProgram<sp/>&amp;rhs)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;rhs)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_util_8h_1aa62c75d314a0d1f37f79c4b73b2292e2" kindref="member">s32</ref><sp/><ref refid="classnjli_1_1_shader_program_1aae83e8f50688f4e6d995131577c6f877" kindref="member">ShaderProgram::calculateSerializeBufferSize</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="244"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>calculateSerializeBufferSize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_shader_program_1a7a620016678fc921ebf0100bb4b4108d" kindref="member">ShaderProgram::serialize</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>dataBuffer,<sp/>btSerializer*<sp/>serializer)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="250"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>serialize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classnjli_1_1_shader_program_1a16da8751fb35c0c0e5265f61abf097b1" kindref="member">ShaderProgram::getClassName</ref>()</highlight><highlight class="keyword">const</highlight></codeline>
<codeline lineno="255"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;ShaderProgram&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_util_8h_1aa62c75d314a0d1f37f79c4b73b2292e2" kindref="member">s32</ref><sp/><ref refid="classnjli_1_1_shader_program_1a07e2fc86c8dacc1358adae792da5a40e" kindref="member">ShaderProgram::getType</ref>()</highlight><highlight class="keyword">const</highlight></codeline>
<codeline lineno="260"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_shader_program_1aab5b5efee2af7a878bad1213aaaf1c7c" kindref="member">ShaderProgram::type</ref>();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>ShaderProgram::operator<sp/>std::string()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="265"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_json_j_l_i_1aac51324ec88a76dee9559a4282e01c9a" kindref="member">njli::JsonJLI::parse</ref>(string_format(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="_shader_program_8cpp_1a4d0768c0d97829b5c252f9643bdc19f5" kindref="member">FORMATSTRING</ref>).c_str());</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>ShaderProgram<sp/>**<ref refid="classnjli_1_1_shader_program_1a917fe9cc181856f037ba3c6f301cbb83" kindref="member">ShaderProgram::createArray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_util_8h_1a10e94b422ef0c20dcdec20d31a1f5049" kindref="member">u32</ref><sp/>size)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classnjli_1_1_shader_program_1a5def475147030f4b08273f0dc0d8d0eb" kindref="member">ShaderProgram</ref>**)<ref refid="classnjli_1_1_world_1a916b92be91d763c4dda322458eca74be" kindref="member">World::getInstance</ref>()-&gt;<ref refid="classnjli_1_1_world_1a02d2a4cda6b5a38bc1db523aba97c52c" kindref="member">getWorldFactory</ref>()-&gt;<ref refid="classnjli_1_1_world_factory_1a6c379949bd79510d934515f9a0aa4008" kindref="member">createArray</ref>(<ref refid="classnjli_1_1_shader_program_1aab5b5efee2af7a878bad1213aaaf1c7c" kindref="member">ShaderProgram::type</ref>(),<sp/>size);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_shader_program_1afebda50ee83d9c3edc51cfe05074cfe1" kindref="member">ShaderProgram::destroyArray</ref>(ShaderProgram<sp/>**array,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_util_8h_1a10e94b422ef0c20dcdec20d31a1f5049" kindref="member">u32</ref><sp/>size)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_world_1a916b92be91d763c4dda322458eca74be" kindref="member">World::getInstance</ref>()-&gt;<ref refid="classnjli_1_1_world_1a02d2a4cda6b5a38bc1db523aba97c52c" kindref="member">getWorldFactory</ref>()-&gt;<ref refid="classnjli_1_1_world_factory_1a40a00fcf24618fa8e4c037efe19119d9" kindref="member">destroyArray</ref>((<ref refid="classnjli_1_1_abstract_factory_object_1a4f7ae7bf09c7c9426e7d6023f7fd8dec" kindref="member">AbstractFactoryObject</ref>**)array,<sp/>size);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>ShaderProgram<sp/>*<ref refid="classnjli_1_1_shader_program_1ab83c3e9c3980d1634defdc1893348051" kindref="member">ShaderProgram::create</ref>()</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classnjli_1_1_shader_program_1a5def475147030f4b08273f0dc0d8d0eb" kindref="member">ShaderProgram</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_world_1a916b92be91d763c4dda322458eca74be" kindref="member">World::getInstance</ref>()-&gt;<ref refid="classnjli_1_1_world_1a02d2a4cda6b5a38bc1db523aba97c52c" kindref="member">getWorldFactory</ref>()-&gt;<ref refid="classnjli_1_1_world_factory_1a2998139e94a357430e4d3a26606d7efb" kindref="member">create</ref>(<ref refid="classnjli_1_1_shader_program_1aab5b5efee2af7a878bad1213aaaf1c7c" kindref="member">ShaderProgram::type</ref>()));</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>ShaderProgram<sp/>*<ref refid="classnjli_1_1_shader_program_1ab83c3e9c3980d1634defdc1893348051" kindref="member">ShaderProgram::create</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ShaderProgramBuilder<sp/>&amp;builder)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AbstractBuilder<sp/>*b<sp/>=<sp/>(AbstractBuilder<sp/>*)&amp;builder;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classnjli_1_1_shader_program_1a5def475147030f4b08273f0dc0d8d0eb" kindref="member">ShaderProgram</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_world_1a916b92be91d763c4dda322458eca74be" kindref="member">World::getInstance</ref>()-&gt;<ref refid="classnjli_1_1_world_1a02d2a4cda6b5a38bc1db523aba97c52c" kindref="member">getWorldFactory</ref>()-&gt;<ref refid="classnjli_1_1_world_factory_1a2998139e94a357430e4d3a26606d7efb" kindref="member">create</ref>(*b));</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>ShaderProgram<sp/>*<ref refid="classnjli_1_1_shader_program_1a523770f983514aa561c96fb1d4d41db0" kindref="member">ShaderProgram::clone</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ShaderProgram<sp/>&amp;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classnjli_1_1_shader_program_1a5def475147030f4b08273f0dc0d8d0eb" kindref="member">ShaderProgram</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_world_1a916b92be91d763c4dda322458eca74be" kindref="member">World::getInstance</ref>()-&gt;<ref refid="classnjli_1_1_world_1a02d2a4cda6b5a38bc1db523aba97c52c" kindref="member">getWorldFactory</ref>()-&gt;<ref refid="classnjli_1_1_world_factory_1ad45e7eac9f28b683a29fc3e397549d84" kindref="member">clone</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>ShaderProgram<sp/>*<ref refid="classnjli_1_1_shader_program_1a0e87d0f5882c1344bac847d736982737" kindref="member">ShaderProgram::copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ShaderProgram<sp/>&amp;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classnjli_1_1_shader_program_1a5def475147030f4b08273f0dc0d8d0eb" kindref="member">ShaderProgram</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_world_1a916b92be91d763c4dda322458eca74be" kindref="member">World::getInstance</ref>()-&gt;<ref refid="classnjli_1_1_world_1a02d2a4cda6b5a38bc1db523aba97c52c" kindref="member">getWorldFactory</ref>()-&gt;<ref refid="classnjli_1_1_world_factory_1ad45e7eac9f28b683a29fc3e397549d84" kindref="member">clone</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_abstract_factory_object_1a8776a16a4f861e556bd9395c8a93ba71" kindref="member">ShaderProgram::destroy</ref>(ShaderProgram<sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_world_1a916b92be91d763c4dda322458eca74be" kindref="member">World::getInstance</ref>()-&gt;<ref refid="classnjli_1_1_world_1a02d2a4cda6b5a38bc1db523aba97c52c" kindref="member">getWorldFactory</ref>()-&gt;<ref refid="classnjli_1_1_world_factory_1ace215cda602d0bc17315d755036fb497" kindref="member">destroy</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_shader_program_1a63b4edd585a0b9ef51c2578548421bf8" kindref="member">ShaderProgram::load</ref>(ShaderProgram<sp/>&amp;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>lua_State<sp/>*L,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Push<sp/>another<sp/>reference<sp/>to<sp/>the<sp/>table<sp/>on<sp/>top<sp/>of<sp/>the<sp/>stack<sp/>(so<sp/>we<sp/>know</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>where<sp/>it<sp/>is,<sp/>and<sp/>this<sp/>function<sp/>can<sp/>work<sp/>for<sp/>negative,<sp/>positive<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pseudo<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushvalue(L,<sp/>index);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stack<sp/>now<sp/>contains:<sp/>-1<sp/>=&gt;<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushnil(L);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stack<sp/>now<sp/>contains:<sp/>-1<sp/>=&gt;<sp/>nil;<sp/>-2<sp/>=&gt;<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(lua_next(L,<sp/>-2))</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stack<sp/>now<sp/>contains:<sp/>-1<sp/>=&gt;<sp/>value;<sp/>-2<sp/>=&gt;<sp/>key;<sp/>-3<sp/>=&gt;<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>the<sp/>key<sp/>so<sp/>that<sp/>lua_tostring<sp/>does<sp/>not<sp/>modify<sp/>the<sp/>original</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushvalue(L,<sp/>-2);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stack<sp/>now<sp/>contains:<sp/>-1<sp/>=&gt;<sp/>key;<sp/>-2<sp/>=&gt;<sp/>value;<sp/>-3<sp/>=&gt;<sp/>key;<sp/>-4<sp/>=&gt;<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key<sp/>=<sp/>lua_tostring(L,<sp/>-1);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value<sp/>=<sp/>lua_tostring(L,<sp/>-2);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lua_istable(L,<sp/>-2))</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_shader_program_1a63b4edd585a0b9ef51c2578548421bf8" kindref="member">ShaderProgram::load</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>L,<sp/>-2);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lua_isnumber(L,<sp/>index))</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>number<sp/>=<sp/>lua_tonumber(L,<sp/>index);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s<sp/>=&gt;<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>key,<sp/>number);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lua_isstring(L,<sp/>index))</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*v<sp/>=<sp/>lua_tostring(L,<sp/>index);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s<sp/>=&gt;<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>key,<sp/>v);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lua_isboolean(L,<sp/>index))</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>lua_toboolean(L,<sp/>index);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s<sp/>=&gt;<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>key,<sp/>v);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lua_isuserdata(L,<sp/>index))</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swig_lua_userdata<sp/>*usr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swig_type_info<sp/>*type;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_ASSERT(lua_isuserdata(L,index));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usr=(swig_lua_userdata*)lua_touserdata(L,index);<sp/><sp/>/*<sp/>get<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>usr-&gt;type;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>njli::AbstractFactoryObject<sp/>*object<sp/>=<sp/>static_cast&lt;njli::AbstractFactoryObject*&gt;(usr-&gt;ptr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;%s<sp/>=&gt;<sp/>%d:%s\n&quot;,<sp/>key,<sp/>object-&gt;getType(),<sp/>object-&gt;getClassName());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pop<sp/>value<sp/>+<sp/>copy<sp/>of<sp/>key,<sp/>leaving<sp/>original<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pop(L,<sp/>2);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stack<sp/>now<sp/>contains:<sp/>-1<sp/>=&gt;<sp/>key;<sp/>-2<sp/>=&gt;<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stack<sp/>now<sp/>contains:<sp/>-1<sp/>=&gt;<sp/>table<sp/>(when<sp/>lua_next<sp/>returns<sp/>0<sp/>it<sp/>pops<sp/>the<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>does<sp/>not<sp/>push<sp/>anything.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pop<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pop(L,<sp/>1);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stack<sp/>is<sp/>now<sp/>the<sp/>same<sp/>as<sp/>it<sp/>was<sp/>on<sp/>entry<sp/>to<sp/>this<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_util_8h_1a10e94b422ef0c20dcdec20d31a1f5049" kindref="member">u32</ref><sp/><ref refid="classnjli_1_1_shader_program_1aab5b5efee2af7a878bad1213aaaf1c7c" kindref="member">ShaderProgram::type</ref>()</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacenjli_1a6d56d4fbaf89fcf3e3d32839df05b444afc5c1e38c907b27cd79b8a154aa1f021" kindref="member">JLI_OBJECT_TYPE_ShaderProgram</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_shader_program_1a5a6c623a0321cfc305b6edc6e514b049" kindref="member">ShaderProgram::compile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*source,<sp/><ref refid="namespacenjli_1a8f2b6cfac9213576c34bcf711ac39fbd" kindref="member">njliShaderType</ref><sp/>type)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacenjli_1a8f2b6cfac9213576c34bcf711ac39fbda446314814389da25bab90e8855a6d3d8" kindref="member">JLI_SHADER_TYPE_FRAGMENT</ref>:</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-1<sp/>!=<sp/><ref refid="classnjli_1_1_shader_program_1a8d458f03143bbe222e248f936a7f7ab2" kindref="member">fragShader</ref>)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDeleteShader(<ref refid="classnjli_1_1_shader_program_1a8d458f03143bbe222e248f936a7f7ab2" kindref="member">fragShader</ref>);<ref refid="_log_8h_1afd7c1a8acb51b1311cccca3f54cedb82" kindref="member">DEBUG_GL_ERROR_WRITE</ref>(</highlight><highlight class="stringliteral">&quot;glDeleteShader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_shader_program_1a47e7e27178632533e9d8c805f5482812" kindref="member">compileShader</ref>(&amp;<ref refid="classnjli_1_1_shader_program_1a8d458f03143bbe222e248f936a7f7ab2" kindref="member">fragShader</ref>,<sp/>GL_FRAGMENT_SHADER,<sp/>source);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>compileShader(&amp;fragShader,<sp/>GL_FRAGMENT_SHADER,<sp/>source);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(ret)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glAttachShader(program,<sp/>fragShader);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacenjli_1a8f2b6cfac9213576c34bcf711ac39fbda2b0d4740bfc8bf1f47d35fbede6cc6b4" kindref="member">JLI_SHADER_TYPE_VERTEX</ref>:</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-1<sp/>!=<sp/><ref refid="classnjli_1_1_shader_program_1aba3909c715f4b21a0bd269cedbd312de" kindref="member">vertShader</ref>)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDeleteShader(<ref refid="classnjli_1_1_shader_program_1aba3909c715f4b21a0bd269cedbd312de" kindref="member">vertShader</ref>);<ref refid="_log_8h_1afd7c1a8acb51b1311cccca3f54cedb82" kindref="member">DEBUG_GL_ERROR_WRITE</ref>(</highlight><highlight class="stringliteral">&quot;glDeleteShader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_shader_program_1a47e7e27178632533e9d8c805f5482812" kindref="member">compileShader</ref>(&amp;<ref refid="classnjli_1_1_shader_program_1aba3909c715f4b21a0bd269cedbd312de" kindref="member">vertShader</ref>,<sp/>GL_VERTEX_SHADER,<sp/>source);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>compileShader(&amp;vertShader,<sp/>GL_VERTEX_SHADER,<sp/>source);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(ret)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glAttachShader(program,<sp/>vertShader);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_shader_program_1a594c725a3e03f3c287f9a806a23a21cd" kindref="member">ShaderProgram::bindAttribute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*attributeName)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_util_8h_1aa62c75d314a0d1f37f79c4b73b2292e2" kindref="member">s32</ref><sp/>index<sp/>=<sp/><ref refid="classnjli_1_1_shader_program_1af67434e2936da60a69561582112713b3" kindref="member">getAttributeIndex</ref>(attributeName);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBindAttribLocation(program,<sp/>index,<sp/>attributeName);<ref refid="_log_8h_1afd7c1a8acb51b1311cccca3f54cedb82" kindref="member">DEBUG_GL_ERROR_WRITE</ref>(</highlight><highlight class="stringliteral">&quot;glBindAttribLocation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_program_info_log(program);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_util_8h_1a10e94b422ef0c20dcdec20d31a1f5049" kindref="member">u32</ref><sp/><ref refid="classnjli_1_1_shader_program_1af67434e2936da60a69561582112713b3" kindref="member">ShaderProgram::getAttributeIndex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*attributeName)</highlight><highlight class="keyword">const</highlight></codeline>
<codeline lineno="427"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_util_8h_1aa62c75d314a0d1f37f79c4b73b2292e2" kindref="member">s32</ref><sp/>_id<sp/>=<sp/>glGetAttribLocation(program,<sp/>attributeName);<ref refid="_log_8h_1afd7c1a8acb51b1311cccca3f54cedb82" kindref="member">DEBUG_GL_ERROR_WRITE</ref>(</highlight><highlight class="stringliteral">&quot;glGetAttribLocation\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_program_info_log(program);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_log_8h_1a6477a35a45a62b17c166482051cc7a15" kindref="member">DEBUG_ASSERT_PRINT</ref>(-1<sp/>!=<sp/>_id,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>named<sp/>attribute<sp/>variable<sp/>(%s)<sp/>is<sp/>not<sp/>an<sp/>active<sp/>attribute<sp/>in<sp/>the<sp/>specified<sp/>program<sp/>object<sp/>or<sp/>if<sp/>name<sp/>starts<sp/>with<sp/>the<sp/>reserved<sp/>prefix<sp/>\&quot;gl_\&quot;&quot;</highlight><highlight class="normal">,<sp/>attributeName);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_util_8h_1a10e94b422ef0c20dcdec20d31a1f5049" kindref="member">u32</ref><sp/><ref refid="classnjli_1_1_shader_program_1a2c808051a6d588a8df5ac7d44e308777" kindref="member">ShaderProgram::getUniformIndex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uniformName)</highlight><highlight class="keyword">const</highlight></codeline>
<codeline lineno="437"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_util_8h_1aa62c75d314a0d1f37f79c4b73b2292e2" kindref="member">s32</ref><sp/>_id<sp/>=<sp/>glGetUniformLocation(program,<sp/>uniformName);</highlight><highlight class="comment">//DEBUG_GL_ERROR_PRINT(&quot;glGetUniformLocation\n&quot;,<sp/>&quot;%d,%s&quot;,program,uniformName);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_log_8h_1a6477a35a45a62b17c166482051cc7a15" kindref="member">DEBUG_ASSERT_PRINT</ref>(-1<sp/>!=<sp/>_id,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>named<sp/>uniform<sp/>variable<sp/>(%s)<sp/>is<sp/>not<sp/>an<sp/>active<sp/>uniform<sp/>in<sp/>the<sp/>specified<sp/>program<sp/>object<sp/>or<sp/>if<sp/>name<sp/>starts<sp/>with<sp/>the<sp/>reserved<sp/>prefix<sp/>\&quot;gl_\&quot;&quot;</highlight><highlight class="normal">,<sp/>uniformName);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_id;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_shader_program_1add1203b770ecde00cf3089433cdc372e" kindref="member">ShaderProgram::link</ref>()</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_log_8h_1a5687826f07a383abedc6329b6a07f40b" kindref="member">DEBUG_ASSERT</ref>(!<ref refid="classnjli_1_1_shader_program_1acc34ddd8319df957d7a7278de58cddca" kindref="member">isLinked</ref>());</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classnjli_1_1_shader_program_1a5a6c623a0321cfc305b6edc6e514b049" kindref="member">compile</ref>(<ref refid="classnjli_1_1_shader_program_1a36b6891a72ec4e6f7ee89add79884282" kindref="member">m_VertexShaderSource</ref>.c_str(),<sp/><ref refid="namespacenjli_1a8f2b6cfac9213576c34bcf711ac39fbda2b0d4740bfc8bf1f47d35fbede6cc6b4" kindref="member">JLI_SHADER_TYPE_VERTEX</ref>))</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_log_8h_1a027235ba85c1a6314d8f8a32c05f6175" kindref="member">DEBUG_LOG_PRINT_E</ref>(<ref refid="_shader_program_8cpp_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Vertex<sp/>log:<sp/>`%s`\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="classnjli_1_1_shader_program_1a530365b7fb3ed11afd9b6351685c93e2" kindref="member">vertexShaderLog</ref>());</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classnjli_1_1_shader_program_1a5a6c623a0321cfc305b6edc6e514b049" kindref="member">compile</ref>(<ref refid="classnjli_1_1_shader_program_1aa1e64cb2fabffbafbff9f7c707672643" kindref="member">m_FragmentShaderSource</ref>.c_str(),<sp/><ref refid="namespacenjli_1a8f2b6cfac9213576c34bcf711ac39fbda446314814389da25bab90e8855a6d3d8" kindref="member">JLI_SHADER_TYPE_FRAGMENT</ref>))</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_log_8h_1a027235ba85c1a6314d8f8a32c05f6175" kindref="member">DEBUG_LOG_PRINT_E</ref>(<ref refid="_shader_program_8cpp_1afc3d101f633a076cc1ca84b85b6224b2" kindref="member">TAG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Vertex<sp/>log:<sp/>`%s`\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="classnjli_1_1_shader_program_1ad14638ca355f579b1671ed181e556a4c" kindref="member">fragmentShaderLog</ref>());</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>program<sp/>=<sp/><ref refid="_shader_program_8cpp_1a3b36ffaf5ba3726d1940e5a9836ffe0d" kindref="member">link_program</ref>(<ref refid="classnjli_1_1_shader_program_1aba3909c715f4b21a0bd269cedbd312de" kindref="member">vertShader</ref>,<sp/><ref refid="classnjli_1_1_shader_program_1a8d458f03143bbe222e248f936a7f7ab2" kindref="member">fragShader</ref>);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLint<sp/>status<sp/>=<sp/><ref refid="_shader_program_8cpp_1a23619ee67b28c07e375171adc8bba267" kindref="member">validate_program</ref>(program);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="_log_8h_1a44d8ca8ecfccda385a2802f51e3dd234" kindref="member">LOGGING_ON</ref><sp/>&amp;&amp;<sp/>GL_TRUE<sp/>==<sp/>status)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLint<sp/>active<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLsizei<sp/>length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLsizei<sp/>size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLenum<sp/>type<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLint<sp/>nameMaxLength<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLchar<sp/>*variableName<sp/>=<sp/><ref refid="_abstract_state_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetProgramiv(program,<sp/>GL_ACTIVE_UNIFORMS,<sp/>&amp;active);<ref refid="_log_8h_1afd7c1a8acb51b1311cccca3f54cedb82" kindref="member">DEBUG_GL_ERROR_WRITE</ref>(</highlight><highlight class="stringliteral">&quot;glGetProgramiv\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetProgramiv(program,<sp/>GL_ACTIVE_UNIFORM_MAX_LENGTH,<sp/>&amp;nameMaxLength);<ref refid="_log_8h_1afd7c1a8acb51b1311cccca3f54cedb82" kindref="member">DEBUG_GL_ERROR_WRITE</ref>(</highlight><highlight class="stringliteral">&quot;glGetProgramiv\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variableName<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GLchar[nameMaxLength];</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(GLuint<sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>active;<sp/>++index)</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetActiveUniform(program,<sp/>index,<sp/>nameMaxLength,<sp/>&amp;length,<sp/>&amp;size,<sp/>&amp;type,<sp/>variableName);<ref refid="_log_8h_1afd7c1a8acb51b1311cccca3f54cedb82" kindref="member">DEBUG_GL_ERROR_WRITE</ref>(</highlight><highlight class="stringliteral">&quot;glGetActiveUniform\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_LOG_V(TAG,<sp/>&quot;Uniform<sp/>Variable<sp/>Loaded:<sp/>%s<sp/>%s<sp/>(size=%d)&quot;,<sp/>getGLSLVarTypeName((njliGLSLVarType)type),<sp/>variableName,<sp/>size);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>variableName;variableName=<ref refid="_abstract_state_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetProgramiv(program,<sp/>GL_ACTIVE_ATTRIBUTES,<sp/>&amp;active);<ref refid="_log_8h_1afd7c1a8acb51b1311cccca3f54cedb82" kindref="member">DEBUG_GL_ERROR_WRITE</ref>(</highlight><highlight class="stringliteral">&quot;glGetProgramiv\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetProgramiv(program,<sp/>GL_ACTIVE_ATTRIBUTE_MAX_LENGTH,<sp/>&amp;nameMaxLength);<ref refid="_log_8h_1afd7c1a8acb51b1311cccca3f54cedb82" kindref="member">DEBUG_GL_ERROR_WRITE</ref>(</highlight><highlight class="stringliteral">&quot;glGetProgramiv\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variableName<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GLchar[nameMaxLength];</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(GLuint<sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>active;<sp/>++index)</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetActiveAttrib(program,<sp/>index,<sp/>nameMaxLength,<sp/>&amp;length,<sp/>&amp;size,<sp/>&amp;type,<sp/>variableName);<ref refid="_log_8h_1afd7c1a8acb51b1311cccca3f54cedb82" kindref="member">DEBUG_GL_ERROR_WRITE</ref>(</highlight><highlight class="stringliteral">&quot;glGetActiveAttrib\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_LOG_V(TAG,<sp/>&quot;Attribute<sp/>Loaded:<sp/>%s<sp/>%s<sp/>(size=%d)&quot;,<sp/>getGLSLVarTypeName((njliGLSLVarType)type),<sp/>variableName,<sp/>size);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>variableName;variableName=<ref refid="_abstract_state_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glLinkProgram(program);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetProgramiv(program,<sp/>GL_LINK_STATUS,<sp/>&amp;status);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="comment">//#if<sp/>defined(DEBUG)<sp/>||<sp/>defined<sp/>(_DEBUG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(status<sp/>==<sp/>GL_FALSE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLint<sp/>logLength<sp/>=<sp/>4098;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLchar<sp/>*log<sp/>=<sp/>new<sp/>GLchar[logLength];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetShaderiv(*shader,<sp/>GL_INFO_LOG_LENGTH,<sp/>&amp;logLength);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetShaderInfoLog(program,<sp/>4098,<sp/>&amp;logLength,<sp/>(GLchar*)log);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_LOG_V(TAG,<sp/>&quot;%s&quot;,<sp/>log);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glValidateProgram(program);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetShaderInfoLog(program,<sp/>4098,<sp/>&amp;logLength,<sp/>(GLchar*)log);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_LOG_V(TAG,<sp/>&quot;%s&quot;,<sp/>log);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delete<sp/>[]<sp/>log;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="comment">//#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>GL_FALSE)</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_shader_program_1a302cf231b252535230e1eaa794c0dc3e" kindref="member">ShaderProgram::saveSource</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;vertexShaderSource,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;fragmentShaderSource)</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_shader_program_1a36b6891a72ec4e6f7ee89add79884282" kindref="member">m_VertexShaderSource</ref><sp/>=<sp/>vertexShaderSource;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_shader_program_1aa1e64cb2fabffbafbff9f7c707672643" kindref="member">m_FragmentShaderSource</ref><sp/>=<sp/>fragmentShaderSource;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_shader_program_1acc34ddd8319df957d7a7278de58cddca" kindref="member">ShaderProgram::isLinked</ref>()</highlight><highlight class="keyword">const</highlight></codeline>
<codeline lineno="536"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(program<sp/>!=<sp/>-1);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_shader_program_1a3e6356c61c06c4cbb5b08351ef03d2a2" kindref="member">ShaderProgram::use</ref>()</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_LOG_D(&quot;SHADER&quot;,<sp/>&quot;BEFORE<sp/>USE<sp/>%d&quot;,<sp/>program);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUseProgram(program);</highlight><highlight class="comment">//DEBUG_GL_ERROR_PRINT(&quot;glUseProgram&quot;,<sp/>&quot;%d&quot;,<sp/>program);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_LOG_D(&quot;SHADER&quot;,<sp/>&quot;AFTER<sp/>USE<sp/>%d&quot;,<sp/>program);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>void<sp/>ShaderProgram::unUse()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="comment"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classnjli_1_1_shader_program_1a530365b7fb3ed11afd9b6351685c93e2" kindref="member">ShaderProgram::vertexShaderLog</ref>()</highlight><highlight class="keyword">const</highlight></codeline>
<codeline lineno="553"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_shader_program_1a9b90e76dd8926135490c139995e0c616" kindref="member">logForOpenGLObject</ref>(<ref refid="classnjli_1_1_shader_program_1aba3909c715f4b21a0bd269cedbd312de" kindref="member">vertShader</ref>,<sp/>(<ref refid="_shader_program_8h_1a50070b167d585b9e4ba6faa4e3063cc7" kindref="member">GLInfoFunction</ref>)&amp;glGetProgramiv,<sp/>(<ref refid="_shader_program_8h_1a946b6792efe50de240df436a3d028764" kindref="member">GLLogFunction</ref>)&amp;glGetProgramInfoLog);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classnjli_1_1_shader_program_1ad14638ca355f579b1671ed181e556a4c" kindref="member">ShaderProgram::fragmentShaderLog</ref>()</highlight><highlight class="keyword">const</highlight></codeline>
<codeline lineno="558"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_shader_program_1a9b90e76dd8926135490c139995e0c616" kindref="member">logForOpenGLObject</ref>(<ref refid="classnjli_1_1_shader_program_1a8d458f03143bbe222e248f936a7f7ab2" kindref="member">fragShader</ref>,<sp/>(<ref refid="_shader_program_8h_1a50070b167d585b9e4ba6faa4e3063cc7" kindref="member">GLInfoFunction</ref>)&amp;glGetProgramiv,<sp/>(<ref refid="_shader_program_8h_1a946b6792efe50de240df436a3d028764" kindref="member">GLLogFunction</ref>)&amp;glGetProgramInfoLog);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classnjli_1_1_shader_program_1a1a8acd66f151141794f1318de54d78b7" kindref="member">ShaderProgram::programLog</ref>()</highlight><highlight class="keyword">const</highlight></codeline>
<codeline lineno="563"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_shader_program_1a9b90e76dd8926135490c139995e0c616" kindref="member">logForOpenGLObject</ref>(program,<sp/>(<ref refid="_shader_program_8h_1a50070b167d585b9e4ba6faa4e3063cc7" kindref="member">GLInfoFunction</ref>)&amp;glGetProgramiv,<sp/>(<ref refid="_shader_program_8h_1a946b6792efe50de240df436a3d028764" kindref="member">GLLogFunction</ref>)&amp;glGetProgramInfoLog);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_shader_program_1af93d37d88d0d56ae1dfe0a902ec7391e" kindref="member">ShaderProgram::unLoadGPU</ref>()</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(-1<sp/>!=<sp/><ref refid="classnjli_1_1_shader_program_1aba3909c715f4b21a0bd269cedbd312de" kindref="member">vertShader</ref>)</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDeleteShader(<ref refid="classnjli_1_1_shader_program_1aba3909c715f4b21a0bd269cedbd312de" kindref="member">vertShader</ref>);<ref refid="_log_8h_1afd7c1a8acb51b1311cccca3f54cedb82" kindref="member">DEBUG_GL_ERROR_WRITE</ref>(</highlight><highlight class="stringliteral">&quot;glDeleteProgram\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_shader_program_1aba3909c715f4b21a0bd269cedbd312de" kindref="member">vertShader</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(-1<sp/>!=<sp/><ref refid="classnjli_1_1_shader_program_1a8d458f03143bbe222e248f936a7f7ab2" kindref="member">fragShader</ref>)</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDeleteShader(<ref refid="classnjli_1_1_shader_program_1a8d458f03143bbe222e248f936a7f7ab2" kindref="member">fragShader</ref>);<ref refid="_log_8h_1afd7c1a8acb51b1311cccca3f54cedb82" kindref="member">DEBUG_GL_ERROR_WRITE</ref>(</highlight><highlight class="stringliteral">&quot;glDeleteProgram\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_shader_program_1a8d458f03143bbe222e248f936a7f7ab2" kindref="member">fragShader</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(-1<sp/>!=<sp/>program)</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDeleteProgram(program);<ref refid="_log_8h_1afd7c1a8acb51b1311cccca3f54cedb82" kindref="member">DEBUG_GL_ERROR_WRITE</ref>(</highlight><highlight class="stringliteral">&quot;glDeleteProgram\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>program<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_shader_program_1a47e7e27178632533e9d8c805f5482812" kindref="member">ShaderProgram::compileShader</ref>(<ref refid="_util_8h_1aa62c75d314a0d1f37f79c4b73b2292e2" kindref="member">s32</ref><sp/>*shader,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLenum<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*source)</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*shader<sp/>=<sp/><ref refid="_shader_program_8cpp_1ab964c8489d10fec2dc891d572453646f" kindref="member">compile_shader</ref>(type,<sp/>source,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)strlen(source)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GL_TRUE;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classnjli_1_1_shader_program_1a9b90e76dd8926135490c139995e0c616" kindref="member">ShaderProgram::logForOpenGLObject</ref>(<ref refid="_util_8h_1a10e94b422ef0c20dcdec20d31a1f5049" kindref="member">u32</ref><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/><ref refid="_shader_program_8h_1a50070b167d585b9e4ba6faa4e3063cc7" kindref="member">GLInfoFunction</ref><sp/>infoFunc,<sp/><ref refid="_shader_program_8h_1a946b6792efe50de240df436a3d028764" kindref="member">GLLogFunction</ref><sp/>logFunc)</highlight><highlight class="keyword">const</highlight></codeline>
<codeline lineno="591"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLint<sp/>logLength<sp/>=<sp/>0,<sp/>charsWritten<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infoFunc(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>GL_INFO_LOG_LENGTH,<sp/>&amp;logLength);<ref refid="_log_8h_1afd7c1a8acb51b1311cccca3f54cedb82" kindref="member">DEBUG_GL_ERROR_WRITE</ref>(</highlight><highlight class="stringliteral">&quot;GLInfoFunction\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(logLength<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_abstract_state_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*logBytes<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[logLength];</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logFunc(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>logLength,<sp/>&amp;charsWritten,<sp/>logBytes);<ref refid="_log_8h_1afd7c1a8acb51b1311cccca3f54cedb82" kindref="member">DEBUG_GL_ERROR_WRITE</ref>(</highlight><highlight class="stringliteral">&quot;GLLogFunction\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>s(logBytes);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>logBytes;logBytes=<ref refid="_abstract_state_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.c_str();</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/render/OpenGLES20/ShaderProgram.cpp"/>
  </compounddef>
</doxygen>
