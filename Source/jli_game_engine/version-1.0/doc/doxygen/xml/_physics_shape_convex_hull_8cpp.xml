<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_physics_shape_convex_hull_8cpp" kind="file">
    <compoundname>PhysicsShapeConvexHull.cpp</compoundname>
    <includes refid="_physics_shape_convex_hull_8h" local="yes">PhysicsShapeConvexHull.h</includes>
    <includes refid="_j_l_i_factory_types_8h" local="yes">JLIFactoryTypes.h</includes>
    <includes refid="_world_8h" local="yes">World.h</includes>
    <includes refid="_physics_shape_convex_hull_builder_8h" local="yes">PhysicsShapeConvexHullBuilder.h</includes>
    <includes local="yes">btPrint.h</includes>
    <includes local="yes">btConvexHullShape.h</includes>
    <incdepgraph>
      <node id="29773">
        <label>btIDebugDraw.h</label>
      </node>
      <node id="29738">
        <label>lua.hpp</label>
      </node>
      <node id="29749">
        <label>WorldLuaVirtualMachine.h</label>
        <link refid="_world_lua_virtual_machine_8h"/>
        <childnode refid="29733" relation="include">
        </childnode>
        <childnode refid="29728" relation="include">
        </childnode>
        <childnode refid="29738" relation="include">
        </childnode>
        <childnode refid="29750" relation="include">
        </childnode>
        <childnode refid="29752" relation="include">
        </childnode>
        <childnode refid="29755" relation="include">
        </childnode>
        <childnode refid="29757" relation="include">
        </childnode>
        <childnode refid="29758" relation="include">
        </childnode>
        <childnode refid="29759" relation="include">
        </childnode>
        <childnode refid="29760" relation="include">
        </childnode>
        <childnode refid="29761" relation="include">
        </childnode>
        <childnode refid="29726" relation="include">
        </childnode>
      </node>
      <node id="29766">
        <label>Camera.h</label>
        <link refid="_camera_8h"/>
        <childnode refid="29737" relation="include">
        </childnode>
        <childnode refid="29725" relation="include">
        </childnode>
        <childnode refid="29741" relation="include">
        </childnode>
        <childnode refid="29740" relation="include">
        </childnode>
        <childnode refid="29738" relation="include">
        </childnode>
      </node>
      <node id="29729">
        <label>Log.h</label>
        <link refid="_log_8h"/>
        <childnode refid="29730" relation="include">
        </childnode>
      </node>
      <node id="29781">
        <label>netinet/in.h</label>
      </node>
      <node id="29734">
        <label>AbstractDecorator.h</label>
        <link refid="_abstract_decorator_8h"/>
        <childnode refid="29728" relation="include">
        </childnode>
        <childnode refid="29735" relation="include">
        </childnode>
        <childnode refid="29733" relation="include">
        </childnode>
      </node>
      <node id="29748">
        <label>queue</label>
      </node>
      <node id="29739">
        <label>PhysicsShape.h</label>
        <link refid="_physics_shape_8h"/>
        <childnode refid="29737" relation="include">
        </childnode>
        <childnode refid="29725" relation="include">
        </childnode>
        <childnode refid="29740" relation="include">
        </childnode>
        <childnode refid="29738" relation="include">
        </childnode>
      </node>
      <node id="29767">
        <label>WorldClock.h</label>
        <link refid="_world_clock_8h"/>
        <childnode refid="29768" relation="include">
        </childnode>
        <childnode refid="29727" relation="include">
        </childnode>
        <childnode refid="29769" relation="include">
        </childnode>
        <childnode refid="29733" relation="include">
        </childnode>
      </node>
      <node id="29754">
        <label>btVector2.h</label>
      </node>
      <node id="29728">
        <label>Util.h</label>
        <link refid="_util_8h"/>
        <childnode refid="29729" relation="include">
        </childnode>
        <childnode refid="29731" relation="include">
        </childnode>
        <childnode refid="29732" relation="include">
        </childnode>
      </node>
      <node id="29762">
        <label>WorldSQLite.h</label>
        <link refid="_world_s_q_lite_8h"/>
        <childnode refid="29728" relation="include">
        </childnode>
        <childnode refid="29763" relation="include">
        </childnode>
        <childnode refid="29733" relation="include">
        </childnode>
      </node>
      <node id="29786">
        <label>PhysicsShapeConvexHullBuilder.h</label>
        <link refid="_physics_shape_convex_hull_builder_8h"/>
        <childnode refid="29726" relation="include">
        </childnode>
        <childnode refid="29728" relation="include">
        </childnode>
        <childnode refid="29737" relation="include">
        </childnode>
        <childnode refid="29736" relation="include">
        </childnode>
        <childnode refid="29738" relation="include">
        </childnode>
        <childnode refid="29729" relation="include">
        </childnode>
      </node>
      <node id="29750">
        <label>AbstractState.h</label>
        <link refid="_abstract_state_8h"/>
        <childnode refid="29737" relation="include">
        </childnode>
        <childnode refid="29728" relation="include">
        </childnode>
        <childnode refid="29751" relation="include">
        </childnode>
        <childnode refid="29731" relation="include">
        </childnode>
      </node>
      <node id="29731">
        <label>stdlib.h</label>
      </node>
      <node id="29753">
        <label>DeviceInputTime.h</label>
        <link refid="_device_input_time_8h"/>
        <childnode refid="29728" relation="include">
        </childnode>
      </node>
      <node id="29788">
        <label>btConvexHullShape.h</label>
      </node>
      <node id="29785">
        <label>btQuickprof.h</label>
      </node>
      <node id="29775">
        <label>File.h</label>
        <link refid="_file_8h"/>
        <childnode refid="29730" relation="include">
        </childnode>
        <childnode refid="29732" relation="include">
        </childnode>
        <childnode refid="29731" relation="include">
        </childnode>
      </node>
      <node id="29774">
        <label>WorldHUD.h</label>
        <link refid="_world_h_u_d_8h"/>
        <childnode refid="29727" relation="include">
        </childnode>
        <childnode refid="29775" relation="include">
        </childnode>
        <childnode refid="29728" relation="include">
        </childnode>
        <childnode refid="29776" relation="include">
        </childnode>
        <childnode refid="29777" relation="include">
        </childnode>
        <childnode refid="29741" relation="include">
        </childnode>
        <childnode refid="29726" relation="include">
        </childnode>
        <childnode refid="29735" relation="include">
        </childnode>
      </node>
      <node id="29771">
        <label>Geometry.h</label>
        <link refid="_geometry_8h"/>
        <childnode refid="29737" relation="include">
        </childnode>
        <childnode refid="29725" relation="include">
        </childnode>
        <childnode refid="29738" relation="include">
        </childnode>
        <childnode refid="29772" relation="include">
        </childnode>
        <childnode refid="29733" relation="include">
        </childnode>
        <childnode refid="29754" relation="include">
        </childnode>
        <childnode refid="29740" relation="include">
        </childnode>
      </node>
      <node id="29768">
        <label>AbstractClock.h</label>
        <link refid="_abstract_clock_8h"/>
        <childnode refid="29728" relation="include">
        </childnode>
        <childnode refid="29733" relation="include">
        </childnode>
      </node>
      <node id="29733">
        <label>string</label>
      </node>
      <node id="29757">
        <label>Scene.h</label>
        <link refid="_scene_8h"/>
        <childnode refid="29737" relation="include">
        </childnode>
        <childnode refid="29725" relation="include">
        </childnode>
        <childnode refid="29726" relation="include">
        </childnode>
        <childnode refid="29741" relation="include">
        </childnode>
        <childnode refid="29738" relation="include">
        </childnode>
        <childnode refid="29733" relation="include">
        </childnode>
        <childnode refid="29735" relation="include">
        </childnode>
      </node>
      <node id="29752">
        <label>DeviceTouch.h</label>
        <link refid="_device_touch_8h"/>
        <childnode refid="29753" relation="include">
        </childnode>
        <childnode refid="29754" relation="include">
        </childnode>
        <childnode refid="29733" relation="include">
        </childnode>
      </node>
      <node id="29747">
        <label>map</label>
      </node>
      <node id="29755">
        <label>Node.h</label>
        <link refid="_node_8h"/>
        <childnode refid="29737" relation="include">
        </childnode>
        <childnode refid="29725" relation="include">
        </childnode>
        <childnode refid="29756" relation="include">
        </childnode>
        <childnode refid="29741" relation="include">
        </childnode>
        <childnode refid="29754" relation="include">
        </childnode>
        <childnode refid="29738" relation="include">
        </childnode>
        <childnode refid="29733" relation="include">
        </childnode>
      </node>
      <node id="29782">
        <label>WorldState.h</label>
        <link refid="_world_state_8h"/>
        <childnode refid="29737" relation="include">
        </childnode>
        <childnode refid="29750" relation="include">
        </childnode>
        <childnode refid="29752" relation="include">
        </childnode>
        <childnode refid="29738" relation="include">
        </childnode>
      </node>
      <node id="29740">
        <label>btVector3.h</label>
      </node>
      <node id="29726">
        <label>btAlignedObjectArray.h</label>
      </node>
      <node id="29761">
        <label>PhysicsRayContact.h</label>
        <link refid="_physics_ray_contact_8h"/>
        <childnode refid="29737" relation="include">
        </childnode>
        <childnode refid="29725" relation="include">
        </childnode>
        <childnode refid="29738" relation="include">
        </childnode>
      </node>
      <node id="29763">
        <label>sqlite3.h</label>
      </node>
      <node id="29737">
        <label>AbstractBuilder.h</label>
        <link refid="_abstract_builder_8h"/>
        <childnode refid="29725" relation="include">
        </childnode>
        <childnode refid="29728" relation="include">
        </childnode>
        <childnode refid="29736" relation="include">
        </childnode>
        <childnode refid="29733" relation="include">
        </childnode>
      </node>
      <node id="29787">
        <label>btPrint.h</label>
      </node>
      <node id="29736">
        <label>btSerializer.h</label>
      </node>
      <node id="29742">
        <label>btBroadphaseProxy.h</label>
      </node>
      <node id="29770">
        <label>WorldDebugDrawer.h</label>
        <link refid="_world_debug_drawer_8h"/>
        <childnode refid="29733" relation="include">
        </childnode>
        <childnode refid="29771" relation="include">
        </childnode>
        <childnode refid="29773" relation="include">
        </childnode>
      </node>
      <node id="29769">
        <label>btClock.h</label>
      </node>
      <node id="29780">
        <label>WorldSocket.h</label>
        <link refid="_world_socket_8h"/>
        <childnode refid="29781" relation="include">
        </childnode>
        <childnode refid="29727" relation="include">
        </childnode>
        <childnode refid="29748" relation="include">
        </childnode>
        <childnode refid="29733" relation="include">
        </childnode>
        <childnode refid="29775" relation="include">
        </childnode>
      </node>
      <node id="29765">
        <label>GLPlatform.h</label>
      </node>
      <node id="29745">
        <label>WorldFactory.h</label>
        <link refid="_world_factory_8h"/>
        <childnode refid="29728" relation="include">
        </childnode>
        <childnode refid="29726" relation="include">
        </childnode>
        <childnode refid="29746" relation="include">
        </childnode>
        <childnode refid="29736" relation="include">
        </childnode>
        <childnode refid="29737" relation="include">
        </childnode>
        <childnode refid="29725" relation="include">
        </childnode>
        <childnode refid="29747" relation="include">
        </childnode>
        <childnode refid="29748" relation="include">
        </childnode>
        <childnode refid="29733" relation="include">
        </childnode>
        <childnode refid="29735" relation="include">
        </childnode>
        <childnode refid="29741" relation="include">
        </childnode>
      </node>
      <node id="29759">
        <label>btManifoldPoint.h</label>
      </node>
      <node id="29751">
        <label>btScalar.h</label>
      </node>
      <node id="29772">
        <label>bitset</label>
      </node>
      <node id="29756">
        <label>AbstractActionable.h</label>
        <link refid="_abstract_actionable_8h"/>
        <childnode refid="29728" relation="include">
        </childnode>
        <childnode refid="29733" relation="include">
        </childnode>
        <childnode refid="29748" relation="include">
        </childnode>
        <childnode refid="29735" relation="include">
        </childnode>
      </node>
      <node id="29746">
        <label>btHashMap.h</label>
      </node>
      <node id="29735">
        <label>vector</label>
      </node>
      <node id="29778">
        <label>WorldInput.h</label>
        <link refid="_world_input_8h"/>
        <childnode refid="29727" relation="include">
        </childnode>
        <childnode refid="29733" relation="include">
        </childnode>
      </node>
      <node id="29758">
        <label>btDispatcher.h</label>
      </node>
      <node id="29727">
        <label>AbstractObject.h</label>
        <link refid="_abstract_object_8h"/>
        <childnode refid="29728" relation="include">
        </childnode>
        <childnode refid="29733" relation="include">
        </childnode>
        <childnode refid="29734" relation="include">
        </childnode>
      </node>
      <node id="29741">
        <label>JLIFactoryTypes.h</label>
        <link refid="_j_l_i_factory_types_8h"/>
        <childnode refid="29728" relation="include">
        </childnode>
        <childnode refid="29742" relation="include">
        </childnode>
      </node>
      <node id="29777">
        <label>AbstractFrameBufferObject.h</label>
        <link refid="_abstract_frame_buffer_object_8h"/>
        <childnode refid="29728" relation="include">
        </childnode>
      </node>
      <node id="29783">
        <label>WorldStateMachine.h</label>
        <link refid="_world_state_machine_8h"/>
        <childnode refid="29737" relation="include">
        </childnode>
        <childnode refid="29784" relation="include">
        </childnode>
        <childnode refid="29738" relation="include">
        </childnode>
      </node>
      <node id="29744">
        <label>cstddef</label>
      </node>
      <node id="29743">
        <label>World.h</label>
        <link refid="_world_8h"/>
        <childnode refid="29728" relation="include">
        </childnode>
        <childnode refid="29744" relation="include">
        </childnode>
        <childnode refid="29745" relation="include">
        </childnode>
        <childnode refid="29749" relation="include">
        </childnode>
        <childnode refid="29762" relation="include">
        </childnode>
        <childnode refid="29764" relation="include">
        </childnode>
        <childnode refid="29766" relation="include">
        </childnode>
        <childnode refid="29767" relation="include">
        </childnode>
        <childnode refid="29770" relation="include">
        </childnode>
        <childnode refid="29774" relation="include">
        </childnode>
        <childnode refid="29778" relation="include">
        </childnode>
        <childnode refid="29779" relation="include">
        </childnode>
        <childnode refid="29780" relation="include">
        </childnode>
        <childnode refid="29782" relation="include">
        </childnode>
        <childnode refid="29783" relation="include">
        </childnode>
        <childnode refid="29733" relation="include">
        </childnode>
      </node>
      <node id="29724">
        <label>PhysicsShapeConvexHull.h</label>
        <link refid="_physics_shape_convex_hull_8h"/>
        <childnode refid="29725" relation="include">
        </childnode>
        <childnode refid="29737" relation="include">
        </childnode>
        <childnode refid="29738" relation="include">
        </childnode>
        <childnode refid="29729" relation="include">
        </childnode>
        <childnode refid="29739" relation="include">
        </childnode>
      </node>
      <node id="29764">
        <label>WorldSound.h</label>
        <link refid="_world_sound_8h"/>
        <childnode refid="29765" relation="include">
        </childnode>
        <childnode refid="29727" relation="include">
        </childnode>
        <childnode refid="29728" relation="include">
        </childnode>
        <childnode refid="29733" relation="include">
        </childnode>
      </node>
      <node id="29723">
        <label>/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/PhysicsShapeConvexHull.cpp</label>
        <link refid="PhysicsShapeConvexHull.cpp"/>
        <childnode refid="29724" relation="include">
        </childnode>
        <childnode refid="29741" relation="include">
        </childnode>
        <childnode refid="29743" relation="include">
        </childnode>
        <childnode refid="29786" relation="include">
        </childnode>
        <childnode refid="29787" relation="include">
        </childnode>
        <childnode refid="29788" relation="include">
        </childnode>
      </node>
      <node id="29730">
        <label>Macros.h</label>
        <link refid="_macros_8h"/>
      </node>
      <node id="29776">
        <label>nanovg.h</label>
      </node>
      <node id="29760">
        <label>Action.h</label>
        <link refid="_action_8h"/>
        <childnode refid="29756" relation="include">
        </childnode>
        <childnode refid="29737" relation="include">
        </childnode>
        <childnode refid="29725" relation="include">
        </childnode>
        <childnode refid="29741" relation="include">
        </childnode>
        <childnode refid="29726" relation="include">
        </childnode>
        <childnode refid="29738" relation="include">
        </childnode>
        <childnode refid="29748" relation="include">
        </childnode>
        <childnode refid="29735" relation="include">
        </childnode>
      </node>
      <node id="29779">
        <label>WorldResourceLoader.h</label>
        <link refid="_world_resource_loader_8h"/>
        <childnode refid="29727" relation="include">
        </childnode>
        <childnode refid="29741" relation="include">
        </childnode>
        <childnode refid="29746" relation="include">
        </childnode>
        <childnode refid="29735" relation="include">
        </childnode>
      </node>
      <node id="29732">
        <label>stdio.h</label>
      </node>
      <node id="29725">
        <label>AbstractFactoryObject.h</label>
        <link refid="_abstract_factory_object_8h"/>
        <childnode refid="29726" relation="include">
        </childnode>
        <childnode refid="29727" relation="include">
        </childnode>
        <childnode refid="29728" relation="include">
        </childnode>
        <childnode refid="29736" relation="include">
        </childnode>
      </node>
      <node id="29784">
        <label>AbstractStateMachine.h</label>
        <link refid="_abstract_state_machine_8h"/>
        <childnode refid="29725" relation="include">
        </childnode>
        <childnode refid="29750" relation="include">
        </childnode>
        <childnode refid="29785" relation="include">
        </childnode>
        <childnode refid="29748" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacenjli">njli</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="_physics_shape_convex_hull_8cpp_1afc3d101f633a076cc1ca84b85b6224b2" prot="public" static="no">
        <name>TAG</name>
        <initializer>&quot;PhysicsShapeConvexHull.cpp&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/PhysicsShapeConvexHull.cpp" line="15" column="13" bodyfile="/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/PhysicsShapeConvexHull.cpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_physics_shape_convex_hull_8cpp_1a4d0768c0d97829b5c252f9643bdc19f5" prot="public" static="no">
        <name>FORMATSTRING</name>
        <initializer>&quot;{\&quot;njli::PhysicsShapeConvexHull\&quot;:[]}&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/PhysicsShapeConvexHull.cpp" line="16" column="9" bodyfile="/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/PhysicsShapeConvexHull.cpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>PhysicsShapeConvexHull.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>JLIGameEngineTest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Created<sp/>by<sp/>James<sp/>Folk<sp/>on<sp/>6/22/15.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2015<sp/>James<sp/>Folk.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>mark<sp/>Implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_physics_shape_convex_hull_8h" kindref="compound">PhysicsShapeConvexHull.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_j_l_i_factory_types_8h" kindref="compound">JLIFactoryTypes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_world_8h" kindref="compound">World.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_physics_shape_convex_hull_builder_8h" kindref="compound">PhysicsShapeConvexHullBuilder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TAG<sp/>&quot;PhysicsShapeConvexHull.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FORMATSTRING<sp/>&quot;{\&quot;njli::PhysicsShapeConvexHull\&quot;:[]}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;btPrint.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;btConvexHullShape.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenjli" kindref="compound">njli</ref></highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1a363b041662a8c81f4e27ad2d3e56c5bb" kindref="member">PhysicsShapeConvexHull::PhysicsShapeConvexHull</ref>():</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>PhysicsShape(),</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>m_btConvexHullShape(new<sp/>btConvexHullShape())</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_btConvexHullShape-&gt;setUserPointer(static_cast&lt;void*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1a363b041662a8c81f4e27ad2d3e56c5bb" kindref="member">PhysicsShapeConvexHull::PhysicsShapeConvexHull</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AbstractBuilder<sp/>&amp;builder):</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>PhysicsShape(builder),</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>m_btConvexHullShape(new<sp/>btConvexHullShape())</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_btConvexHullShape-&gt;setUserPointer(static_cast&lt;void*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1a363b041662a8c81f4e27ad2d3e56c5bb" kindref="member">PhysicsShapeConvexHull::PhysicsShapeConvexHull</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PhysicsShapeConvexHull<sp/>&amp;copy):</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>PhysicsShape(copy),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>m_btConvexHullShape(new<sp/>btConvexHullShape())</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_btConvexHullShape-&gt;setUserPointer(static_cast&lt;void*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1af42caaf1d82900d9880828649de5f8be" kindref="member">PhysicsShapeConvexHull::~PhysicsShapeConvexHull</ref>()</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1adf9e91ee0f43ffa85eb61ba6237c233d" kindref="member">m_btConvexHullShape</ref>-&gt;setUserPointer(<ref refid="_abstract_state_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1adf9e91ee0f43ffa85eb61ba6237c233d" kindref="member">m_btConvexHullShape</ref>;<ref refid="classnjli_1_1_physics_shape_convex_hull_1adf9e91ee0f43ffa85eb61ba6237c233d" kindref="member">m_btConvexHullShape</ref>=<ref refid="_abstract_state_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>PhysicsShapeConvexHull<sp/>&amp;<ref refid="classnjli_1_1_physics_shape_convex_hull_1a16198f726cfc099ac9f861db3e3009e3" kindref="member">PhysicsShapeConvexHull::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PhysicsShapeConvexHull<sp/>&amp;rhs)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;rhs)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_util_8h_1aa62c75d314a0d1f37f79c4b73b2292e2" kindref="member">s32</ref><sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1a1eba30dd3745fbd4c0048fb5fdf6dcb9" kindref="member">PhysicsShapeConvexHull::calculateSerializeBufferSize</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="60"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>calculateSerializeBufferSize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1a814b41a9336adea57ad0d5a2a6aa39c6" kindref="member">PhysicsShapeConvexHull::serialize</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>dataBuffer,<sp/>btSerializer*<sp/>serializer)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="66"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>serialize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classnjli_1_1_physics_shape_convex_hull_1a5fe3fadb21fbd275d76720d6d28e6aec" kindref="member">PhysicsShapeConvexHull::getClassName</ref>()</highlight><highlight class="keyword">const</highlight></codeline>
<codeline lineno="71"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;PhysicsShapeConvexHull&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_util_8h_1aa62c75d314a0d1f37f79c4b73b2292e2" kindref="member">s32</ref><sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1a90c691674614feed280cc77db99c31a1" kindref="member">PhysicsShapeConvexHull::getType</ref>()</highlight><highlight class="keyword">const</highlight></codeline>
<codeline lineno="76"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1ae1bee5097afe0ae2e46953109cfbd59a" kindref="member">PhysicsShapeConvexHull::type</ref>();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>PhysicsShapeConvexHull::operator<sp/>std::string()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="81"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_json_j_l_i_1aac51324ec88a76dee9559a4282e01c9a" kindref="member">njli::JsonJLI::parse</ref>(string_format(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="_physics_shape_convex_hull_8cpp_1a4d0768c0d97829b5c252f9643bdc19f5" kindref="member">FORMATSTRING</ref>).c_str());</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>PhysicsShapeConvexHull<sp/>**<ref refid="classnjli_1_1_physics_shape_convex_hull_1aa1ae6730c491257bffe12d3ab1bf038a" kindref="member">PhysicsShapeConvexHull::createArray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_util_8h_1a10e94b422ef0c20dcdec20d31a1f5049" kindref="member">u32</ref><sp/>size)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classnjli_1_1_physics_shape_convex_hull_1a363b041662a8c81f4e27ad2d3e56c5bb" kindref="member">PhysicsShapeConvexHull</ref>**)<ref refid="classnjli_1_1_world_1a916b92be91d763c4dda322458eca74be" kindref="member">World::getInstance</ref>()-&gt;<ref refid="classnjli_1_1_world_1a02d2a4cda6b5a38bc1db523aba97c52c" kindref="member">getWorldFactory</ref>()-&gt;<ref refid="classnjli_1_1_world_factory_1a6c379949bd79510d934515f9a0aa4008" kindref="member">createArray</ref>(<ref refid="classnjli_1_1_physics_shape_convex_hull_1ae1bee5097afe0ae2e46953109cfbd59a" kindref="member">PhysicsShapeConvexHull::type</ref>(),<sp/>size);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1ad2aa46e6289f757507f2db6599f8fbe9" kindref="member">PhysicsShapeConvexHull::destroyArray</ref>(PhysicsShapeConvexHull<sp/>**array,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_util_8h_1a10e94b422ef0c20dcdec20d31a1f5049" kindref="member">u32</ref><sp/>size)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_world_1a916b92be91d763c4dda322458eca74be" kindref="member">World::getInstance</ref>()-&gt;<ref refid="classnjli_1_1_world_1a02d2a4cda6b5a38bc1db523aba97c52c" kindref="member">getWorldFactory</ref>()-&gt;<ref refid="classnjli_1_1_world_factory_1a40a00fcf24618fa8e4c037efe19119d9" kindref="member">destroyArray</ref>((<ref refid="classnjli_1_1_abstract_factory_object_1a4f7ae7bf09c7c9426e7d6023f7fd8dec" kindref="member">AbstractFactoryObject</ref>**)array,<sp/>size);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>PhysicsShapeConvexHull<sp/>*<ref refid="classnjli_1_1_physics_shape_convex_hull_1aeac645e231051a58b66de87ef7a645c5" kindref="member">PhysicsShapeConvexHull::create</ref>()</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classnjli_1_1_physics_shape_convex_hull_1a363b041662a8c81f4e27ad2d3e56c5bb" kindref="member">PhysicsShapeConvexHull</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_world_1a916b92be91d763c4dda322458eca74be" kindref="member">World::getInstance</ref>()-&gt;<ref refid="classnjli_1_1_world_1a02d2a4cda6b5a38bc1db523aba97c52c" kindref="member">getWorldFactory</ref>()-&gt;<ref refid="classnjli_1_1_world_factory_1a2998139e94a357430e4d3a26606d7efb" kindref="member">create</ref>(<ref refid="classnjli_1_1_physics_shape_convex_hull_1ae1bee5097afe0ae2e46953109cfbd59a" kindref="member">PhysicsShapeConvexHull::type</ref>()));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>PhysicsShapeConvexHull<sp/>*<ref refid="classnjli_1_1_physics_shape_convex_hull_1aeac645e231051a58b66de87ef7a645c5" kindref="member">PhysicsShapeConvexHull::create</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PhysicsShapeConvexHullBuilder<sp/>&amp;builder)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AbstractBuilder<sp/>*b<sp/>=<sp/>(AbstractBuilder<sp/>*)&amp;builder;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classnjli_1_1_physics_shape_convex_hull_1a363b041662a8c81f4e27ad2d3e56c5bb" kindref="member">PhysicsShapeConvexHull</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_world_1a916b92be91d763c4dda322458eca74be" kindref="member">World::getInstance</ref>()-&gt;<ref refid="classnjli_1_1_world_1a02d2a4cda6b5a38bc1db523aba97c52c" kindref="member">getWorldFactory</ref>()-&gt;<ref refid="classnjli_1_1_world_factory_1a2998139e94a357430e4d3a26606d7efb" kindref="member">create</ref>(*b));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>PhysicsShapeConvexHull<sp/>*<ref refid="classnjli_1_1_physics_shape_convex_hull_1a0e7794b97da09fdc6955e72c0b4b839b" kindref="member">PhysicsShapeConvexHull::clone</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PhysicsShapeConvexHull<sp/>&amp;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classnjli_1_1_physics_shape_convex_hull_1a363b041662a8c81f4e27ad2d3e56c5bb" kindref="member">PhysicsShapeConvexHull</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_world_1a916b92be91d763c4dda322458eca74be" kindref="member">World::getInstance</ref>()-&gt;<ref refid="classnjli_1_1_world_1a02d2a4cda6b5a38bc1db523aba97c52c" kindref="member">getWorldFactory</ref>()-&gt;<ref refid="classnjli_1_1_world_factory_1ad45e7eac9f28b683a29fc3e397549d84" kindref="member">clone</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>PhysicsShapeConvexHull<sp/>*<ref refid="classnjli_1_1_physics_shape_convex_hull_1ac1866ad333fbf45b4615f5b635395f45" kindref="member">PhysicsShapeConvexHull::copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PhysicsShapeConvexHull<sp/>&amp;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classnjli_1_1_physics_shape_convex_hull_1a363b041662a8c81f4e27ad2d3e56c5bb" kindref="member">PhysicsShapeConvexHull</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_world_1a916b92be91d763c4dda322458eca74be" kindref="member">World::getInstance</ref>()-&gt;<ref refid="classnjli_1_1_world_1a02d2a4cda6b5a38bc1db523aba97c52c" kindref="member">getWorldFactory</ref>()-&gt;<ref refid="classnjli_1_1_world_factory_1ad45e7eac9f28b683a29fc3e397549d84" kindref="member">clone</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_abstract_factory_object_1a8776a16a4f861e556bd9395c8a93ba71" kindref="member">PhysicsShapeConvexHull::destroy</ref>(PhysicsShapeConvexHull<sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_abstract_factory_object_1a8776a16a4f861e556bd9395c8a93ba71" kindref="member">PhysicsShape::destroy</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1a7259a4885c6b5b71f252799b2bba6b78" kindref="member">PhysicsShapeConvexHull::load</ref>(PhysicsShapeConvexHull<sp/>&amp;</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>lua_State<sp/>*L,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Push<sp/>another<sp/>reference<sp/>to<sp/>the<sp/>table<sp/>on<sp/>top<sp/>of<sp/>the<sp/>stack<sp/>(so<sp/>we<sp/>know</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>where<sp/>it<sp/>is,<sp/>and<sp/>this<sp/>function<sp/>can<sp/>work<sp/>for<sp/>negative,<sp/>positive<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pseudo<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushvalue(L,<sp/>index);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stack<sp/>now<sp/>contains:<sp/>-1<sp/>=&gt;<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushnil(L);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stack<sp/>now<sp/>contains:<sp/>-1<sp/>=&gt;<sp/>nil;<sp/>-2<sp/>=&gt;<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(lua_next(L,<sp/>-2))</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stack<sp/>now<sp/>contains:<sp/>-1<sp/>=&gt;<sp/>value;<sp/>-2<sp/>=&gt;<sp/>key;<sp/>-3<sp/>=&gt;<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>the<sp/>key<sp/>so<sp/>that<sp/>lua_tostring<sp/>does<sp/>not<sp/>modify<sp/>the<sp/>original</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pushvalue(L,<sp/>-2);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stack<sp/>now<sp/>contains:<sp/>-1<sp/>=&gt;<sp/>key;<sp/>-2<sp/>=&gt;<sp/>value;<sp/>-3<sp/>=&gt;<sp/>key;<sp/>-4<sp/>=&gt;<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key<sp/>=<sp/>lua_tostring(L,<sp/>-1);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value<sp/>=<sp/>lua_tostring(L,<sp/>-2);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lua_istable(L,<sp/>-2))</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1a7259a4885c6b5b71f252799b2bba6b78" kindref="member">PhysicsShapeConvexHull::load</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>L,<sp/>-2);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lua_isnumber(L,<sp/>index))</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>number<sp/>=<sp/>lua_tonumber(L,<sp/>index);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s<sp/>=&gt;<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>key,<sp/>number);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lua_isstring(L,<sp/>index))</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*v<sp/>=<sp/>lua_tostring(L,<sp/>index);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s<sp/>=&gt;<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>key,<sp/>v);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lua_isboolean(L,<sp/>index))</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>lua_toboolean(L,<sp/>index);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s<sp/>=&gt;<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>key,<sp/>v);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lua_isuserdata(L,<sp/>index))</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swig_lua_userdata<sp/>*usr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swig_type_info<sp/>*type;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(lua_isuserdata(L,index));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usr=(swig_lua_userdata*)lua_touserdata(L,index);<sp/><sp/>/*<sp/>get<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>usr-&gt;type;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>njli::AbstractFactoryObject<sp/>*object<sp/>=<sp/>static_cast&lt;njli::AbstractFactoryObject*&gt;(usr-&gt;ptr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;%s<sp/>=&gt;<sp/>%d:%s\n&quot;,<sp/>key,<sp/>object-&gt;getType(),<sp/>object-&gt;getClassName());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pop<sp/>value<sp/>+<sp/>copy<sp/>of<sp/>key,<sp/>leaving<sp/>original<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pop(L,<sp/>2);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stack<sp/>now<sp/>contains:<sp/>-1<sp/>=&gt;<sp/>key;<sp/>-2<sp/>=&gt;<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stack<sp/>now<sp/>contains:<sp/>-1<sp/>=&gt;<sp/>table<sp/>(when<sp/>lua_next<sp/>returns<sp/>0<sp/>it<sp/>pops<sp/>the<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>does<sp/>not<sp/>push<sp/>anything.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pop<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lua_pop(L,<sp/>1);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stack<sp/>is<sp/>now<sp/>the<sp/>same<sp/>as<sp/>it<sp/>was<sp/>on<sp/>entry<sp/>to<sp/>this<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_util_8h_1a10e94b422ef0c20dcdec20d31a1f5049" kindref="member">u32</ref><sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1ae1bee5097afe0ae2e46953109cfbd59a" kindref="member">PhysicsShapeConvexHull::type</ref>()</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacenjli_1a6d56d4fbaf89fcf3e3d32839df05b444ab77b0553c701df22963e8e69f169f742" kindref="member">JLI_OBJECT_TYPE_PhysicsShapeConvexHull</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1abee5b436abe41d9a8879a56f7ef67e69" kindref="member">PhysicsShapeConvexHull::getNumVertices</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="193"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btConvexHullShape<sp/>*convexhull<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">btConvexHullShape*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_shape_convex_hull_1a7e87ba6d21b9f02885cb4027ed6a119e" kindref="member">getCollisionShape</ref>());</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>convexhull-&gt;getNumVertices();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1a312aa0e4fc28734819d82a1e7f06de9b" kindref="member">PhysicsShapeConvexHull::getNumEdges</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="199"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btConvexHullShape<sp/>*convexhull<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">btConvexHullShape*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_shape_convex_hull_1a7e87ba6d21b9f02885cb4027ed6a119e" kindref="member">getCollisionShape</ref>());</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>convexhull-&gt;getNumEdges();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1a984ad7279c20e58b6858652ac9037d3a" kindref="member">PhysicsShapeConvexHull::getEdge</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,btVector3&amp;<sp/>pa,btVector3&amp;<sp/>pb)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="205"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btConvexHullShape<sp/>*convexhull<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">btConvexHullShape*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_shape_convex_hull_1a7e87ba6d21b9f02885cb4027ed6a119e" kindref="member">getCollisionShape</ref>());</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convexhull-&gt;getEdge(i,<sp/>pa,<sp/>pb);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1a5cb8f6c85b264b5d3b25a46abf86ff33" kindref="member">PhysicsShapeConvexHull::getVertex</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,btVector3&amp;<sp/>vtx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="211"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btConvexHullShape<sp/>*convexhull<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">btConvexHullShape*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_shape_convex_hull_1a7e87ba6d21b9f02885cb4027ed6a119e" kindref="member">getCollisionShape</ref>());</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convexhull-&gt;getVertex(i,<sp/>vtx);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1a5068958fabcc637b2ce15a98b02ec39b" kindref="member">PhysicsShapeConvexHull::getNumPlanes</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="217"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btConvexHullShape<sp/>*convexhull<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">btConvexHullShape*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_shape_convex_hull_1a7e87ba6d21b9f02885cb4027ed6a119e" kindref="member">getCollisionShape</ref>());</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>convexhull-&gt;getNumPlanes();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1a008d03da898f93fd4c4b089eb2be6a4e" kindref="member">PhysicsShapeConvexHull::getPlane</ref>(btVector3&amp;<sp/>planeNormal,btVector3&amp;<sp/>planeSupport,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="223"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btConvexHullShape<sp/>*convexhull<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">btConvexHullShape*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_shape_convex_hull_1a7e87ba6d21b9f02885cb4027ed6a119e" kindref="member">getCollisionShape</ref>());</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convexhull-&gt;getPlane(planeNormal,<sp/>planeSupport,<sp/>i);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1abf9fdcbc7d8d61f223c933fce29820de" kindref="member">PhysicsShapeConvexHull::isInside</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btVector3&amp;<sp/>pt,<sp/><ref refid="_util_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/>tolerance)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="229"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btConvexHullShape<sp/>*convexhull<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">btConvexHullShape*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_shape_convex_hull_1a7e87ba6d21b9f02885cb4027ed6a119e" kindref="member">getCollisionShape</ref>());</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>convexhull-&gt;isInside(pt,<sp/>tolerance);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1a4d739444321a865b367a2094686ce14d" kindref="member">PhysicsShapeConvexHull::addPoint</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btVector3&amp;<sp/>point,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>recalculateLocalAabb)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>btConvexHullShape<sp/>*convexhull<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal">btConvexHullShape*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_shape_convex_hull_1a7e87ba6d21b9f02885cb4027ed6a119e" kindref="member">getCollisionShape</ref>());</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convexhull-&gt;addPoint(point,<sp/>recalculateLocalAabb);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1a2c0342df4f2033559d51d9b5ebf73963" kindref="member">PhysicsShapeConvexHull::getUnscaledPoints</ref>(std::vector&lt;btVector3&gt;<sp/>&amp;points)</highlight><highlight class="keyword">const</highlight></codeline>
<codeline lineno="242"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btConvexHullShape<sp/>*convexhull<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">btConvexHullShape*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_shape_convex_hull_1a7e87ba6d21b9f02885cb4027ed6a119e" kindref="member">getCollisionShape</ref>());</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="_util_8h_1aa62c75d314a0d1f37f79c4b73b2292e2" kindref="member">s32</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1add482e656068d5d11deb9f781a208e57" kindref="member">getNumPoints</ref>();<sp/>++i)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points.push_back(convexhull-&gt;getUnscaledPoints()[i]);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>btVector3<sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1acf46603f8780d76e96b4e75f88659f4f" kindref="member">PhysicsShapeConvexHull::getScaledPoint</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="251"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btConvexHullShape<sp/>*convexhull<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">btConvexHullShape*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_shape_convex_hull_1a7e87ba6d21b9f02885cb4027ed6a119e" kindref="member">getCollisionShape</ref>());</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>convexhull-&gt;getScaledPoint(i);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1add482e656068d5d11deb9f781a208e57" kindref="member">PhysicsShapeConvexHull::getNumPoints</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="257"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btConvexHullShape<sp/>*convexhull<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">btConvexHullShape*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_shape_convex_hull_1a7e87ba6d21b9f02885cb4027ed6a119e" kindref="member">getCollisionShape</ref>());</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>convexhull-&gt;getNumPoints();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1a62a2f9eee33fb72c82633eb6df2a5c73" kindref="member">PhysicsShapeConvexHull::project</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btTransform&amp;<sp/>trans,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btVector3&amp;<sp/>dir,<sp/>btScalar&amp;<sp/>minProj,<sp/>btScalar&amp;<sp/>maxProj,<sp/>btVector3&amp;<sp/>witnesPtMin,btVector3&amp;<sp/>witnesPtMax)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="263"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btConvexHullShape<sp/>*convexhull<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">btConvexHullShape*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classnjli_1_1_physics_shape_convex_hull_1a7e87ba6d21b9f02885cb4027ed6a119e" kindref="member">getCollisionShape</ref>());</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convexhull-&gt;project(trans,<sp/>dir,<sp/>minProj,<sp/>maxProj,<sp/>witnesPtMin,<sp/>witnesPtMax);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>void<sp/>PhysicsShapeConvexHull::getAabb(const<sp/>btTransform&amp;<sp/>t,btVector3&amp;<sp/>aabbMin,btVector3&amp;<sp/>aabbMax)<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btCollisionShape*<sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1a7e87ba6d21b9f02885cb4027ed6a119e" kindref="member">PhysicsShapeConvexHull::getCollisionShape</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="274"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1adf9e91ee0f43ffa85eb61ba6237c233d" kindref="member">m_btConvexHullShape</ref>;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>btCollisionShape*<sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1a7e87ba6d21b9f02885cb4027ed6a119e" kindref="member">PhysicsShapeConvexHull::getCollisionShape</ref>()</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1adf9e91ee0f43ffa85eb61ba6237c233d" kindref="member">m_btConvexHullShape</ref>;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1ab9d7cb01ac98928573ad1a25e0865a6f" kindref="member">PhysicsShapeConvexHull::setCollisionShape</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btCollisionShape<sp/>&amp;shape)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_log_8h_1a5687826f07a383abedc6329b6a07f40b" kindref="member">DEBUG_ASSERT</ref>(shape.getShapeType()<sp/>==<sp/><ref refid="classnjli_1_1_physics_shape_convex_hull_1adf9e91ee0f43ffa85eb61ba6237c233d" kindref="member">m_btConvexHullShape</ref>-&gt;getShapeType());</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>btConvexHullShape<sp/>*convexhull<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">btConvexHullShape*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;shape);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>btAlignedObjectArray&lt;btScalar&gt;<sp/>points;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="_util_8h_1aa62c75d314a0d1f37f79c4b73b2292e2" kindref="member">s32</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>convexhull-&gt;getNumPoints();<sp/>++i)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>btVector3<sp/>v<sp/>=<sp/>convexhull-&gt;getPoints()[i];</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points.push_back(v.x());</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points.push_back(v.y());</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points.push_back(v.z());</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="classnjli_1_1_physics_shape_convex_hull_1adf9e91ee0f43ffa85eb61ba6237c233d" kindref="member">m_btConvexHullShape</ref><sp/>=<sp/>btConvexHullShape(&amp;points[0],<sp/>convexhull-&gt;getNumPoints());</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/jamesfolk/Dropbox/GameDevelopment/NJLIGames/NJLIGameEngine/Source/jli_game_engine/version-1.0/src/PhysicsShapeConvexHull.cpp"/>
  </compounddef>
</doxygen>
